{"version":3,"sources":["service.js","components/navbar/StyledNavbar.jsx","components/navbar/Navbar.jsx","components/jobItem/StyledJobItem.jsx","components/jobItem/Job.jsx","components/Filter/StyledFilter.jsx","components/Filter/Filter.jsx","components/jobList/StyledJobList.jsx","components/jobList/JobList.jsx","components/jobInfo/StyledJobInfo.jsx","components/jobInfo/JobInfo.jsx","components/home/StyledHome.jsx","components/home/Home.jsx","components/login/StyledLogin.jsx","components/login/Login.jsx","components/registration/backRegister/StyledRegisterBack.jsx","components/registration/backRegister/BackRegister.jsx","components/registration/frontRegister/StyledRegisterFront.jsx","components/registration/frontRegister/FrontRegister.jsx","components/hooks/useRegister.jsx","components/hooks/useRegisterError.jsx","components/registration/registerCard/StyledCard.jsx","components/registration/registerCard/RegisterCard.jsx","components/registration/register/StyledRegister.jsx","components/registration/register/Register.jsx","components/Footer/StyledFooter.jsx","components/Footer/Footer.jsx","components/companyInfo/StyledCompanyInfo.jsx","components/companyInfo/CompanyInfo.jsx","components/GlobalStyle.jsx","components/createJob/StyledCreateJob.jsx","components/createJob/CreateJob.jsx","components/hooks/usePostJob.jsx","components/Route/PublicRoute.jsx","components/Route/PrivateRoute.jsx","App.js","index.js"],"names":["BASE_URL","JOBS","USERS","getJobById","id","axios","get","getUsers","StyledNavbar","styled","nav","Navbar","user","setUser","history","useHistory","htmlFor","type","className","to","username","onClick","push","StyledJobItem","div","StyledDeleteButton","button","Job","job","setJobs","title","company_info","name","location","createdAt","snippet","role","delete","then","prev","filter","el","console","log","StyledFilter","Filter","jobs","setFilterInput","setLocation","setLevel","locationArr","Array","from","Set","map","levels","seniority","onChange","e","target","value","placeholder","defaultValue","disabled","hidden","level","StyledJobList","StyledCreateNew","JobList","useState","filterInput","companies","filteredOptions","toLowerCase","includes","category","length","trim","StyledJobInfo","StyledInnerDiv","JobInfo","setJob","useParams","useEffect","res","data","charAt","toUpperCase","String","slice","job_description","contact","StyledHome","StyledDiv","StyledCurrent","StyledPrevious","StyledNext","Home","current","setCurrent","Math","floor","StyledLogin","StyledLoginForm","StyledLogo","Login","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","onSubmit","preventDefault","find","isValid","StyledRegisterBack","BackRegister","StyledRegisterFront","FrontRegister","rotate","firstName","setFirstName","lastName","setLastName","useRegister","confirmedPassword","setConfirmedPassword","firstNameError","setFirstNameError","lastNameError","setLastNameError","confirmedPasswordError","setConfirmedPasswordError","useRegisterError","uniqueError","setUniqueError","validateEmail","match","validatePassword","arr","newUser","max","confirm_password","some","post","StyledCard","RegisterCard","Front","Back","isFront","setIsFront","transform","setTransform","StyledRegister","Register","front","setFront","StyledFooter","footer","Footer","StyledCompanyInfo","StyledLeft","StyledRight","CompanyInfo","general_info","number_of_employees","link","href","GlobalStyle","createGlobalStyle","StyledCreateJob","StyledForm","form","StyledErrorMsg","StyledSuccessMsg","StyledButton","CreateJob","jobTitle","setJobTitle","jobLocation","setJobLocation","setSeniority","jobCategory","setJobCategory","jobSnippet","setJobSnippet","jobDescription","setJobDescription","companyName","setCompanyName","companyInfo","setCompanyInfo","employeesNumber","setEmployeesNumber","phone","setPhone","url","setUrl","errorMessage","setErrorMessage","usePostJob","successMessage","setSuccessMessage","categories","getDate","date","Date","day","Intl","DateTimeFormat","format","month","year","setTimeout","newJob","cols","rows","PublicRoute","path","exact","Component","PrivateRoute","App","mounted","exacte","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.973f2d01.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://my-json-server.typicode.com/DusicaZeravic/job-Finder-JSON-server';\r\nconst JOBS = '/jobs';\r\nconst USERS = '/users';\r\n\r\nexport const getJobs = () => axios.get(`${BASE_URL}${JOBS}`);\r\n\r\nexport const getJobById = (id) => axios.get(`${BASE_URL}${JOBS}/${id}`);\r\n\r\nexport const postJob = (job) => axios.post(`${BASE_URL}${JOBS}`, job);\r\n\r\nexport const deleteJobById = (id) => axios.delete(`${BASE_URL}${JOBS}/${id}`);\r\n\r\nexport const getUsers = () => axios.get(`${BASE_URL}${USERS}`);\r\n\r\nexport const postUser = (user) => axios.post(`${BASE_URL}${USERS}`, user);\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledNavbar = styled.nav`\r\n    width: 100%;\r\n    height: 10vh;\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 999;\r\n    font-size: 15px;\r\n    background-color: #fffa65;\r\n        label,\r\n        #hamburger {\r\n            display: none;\r\n        }\r\n    \r\n    .items {\r\n        display: flex;\r\n        a {\r\n            width: 25%;\r\n            padding: 28px;\r\n            font-size: 15px;\r\n            text-decoration: none;\r\n            text-align: center;\r\n            text-transform: uppercase;\r\n            font-weight: bold;\r\n            color: #4b4b4b;\r\n            &:hover {\r\n                background-color: #fff200;\r\n            }\r\n        }\r\n        .logged-user {\r\n        width: 45%;\r\n        padding: 15px;\r\n        display: flex; \r\n        justify-content: space-around;\r\n        \r\n        span {\r\n            background-color: rgba(255, 242, 0, 0.8);\r\n            padding: 10px 30px;\r\n            color: #4b4b4b;\r\n            font-size: 17px;\r\n            letter-spacing: 1px;\r\n            border-radius: 5px;\r\n           \r\n        }\r\n\r\n        button {\r\n            background-color: rgba(75, 75, 75, 0.6);\r\n            color: #fafafa;\r\n            padding: 0.6rem 2rem;\r\n            border: none;\r\n            outline: none;\r\n            border-radius: 5px;\r\n            font-size: 17px;\r\n            letter-spacing: 1px;\r\n            cursor: pointer;\r\n            transition: all 0.5s;\r\n            position: relative;\r\n            &::after {\r\n                content: \"\\f2f5\";\r\n                font-family: \"Font Awesome 5 Free\";\r\n                font-weight: 700;\r\n                position: absolute;\r\n                left: 80%;\r\n                top: 50%;\r\n                right: 0;\r\n                bottom: 0;\r\n                opacity: 0;\r\n                transform: translate(-50%, -50%);\r\n            }\r\n            &:hover {\r\n                background-color: rgba(75, 75, 75, 0.9);\r\n                transition: all 0.5s;\r\n                border-radius: 10px;\r\n                padding: 0.6rem 3rem 0.6rem 1.5rem;\r\n                color: #ffffff;\r\n                    &::after {\r\n                        opacity: 1;\r\n                        transition: 0.5s;\r\n                        color: #fff;\r\n                    }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n    @media (max-width: 768px) {\r\n        label {\r\n            display: inline-block;\r\n            color: #4b4b4b;\r\n            background-color: #fff200;\r\n            font-size: 25px;\r\n            font-weight: bold;\r\n            padding: 16px;\r\n        }\r\n\r\n        input:checked ~ .items {\r\n            display: block;\r\n        }\r\n\r\n        .items {\r\n            display: none;\r\n        }\r\n\r\n        .items a {\r\n            display: block;\r\n            width: 100%;\r\n            border-top: 1px solid #fff200;\r\n            background-color: rgba(255, 250, 101, 1);\r\n            padding: 20px;\r\n            &:hover {\r\n                background-color: #fff200;\r\n            }\r\n        }\r\n        .items {\r\n            .logged-user {\r\n                display: block;\r\n                width: 100%;\r\n                border-top: 1px solid #fff200;\r\n                background-color: rgba(255, 250, 101, 1);\r\n                text-align: center;\r\n                padding: 10px;\r\n                &:hover {\r\n                    background-color: #fff200;\r\n                    span {\r\n                        background-color: #fffa65;\r\n                    }\r\n                }\r\n                span {\r\n                    margin-right: 50px;\r\n                }\r\n        }\r\n        }\r\n        \r\n    }\r\n`\r\n\r\n\r\n","import { Link, useHistory } from 'react-router-dom';\r\nimport { StyledNavbar } from './StyledNavbar';\r\n\r\nconst Navbar = ({ user, setUser }) => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <StyledNavbar>\r\n            <label htmlFor=\"hamburger\">&#9776;</label>\r\n            <input type=\"checkbox\" id=\"hamburger\" />\r\n            <div className=\"items\">\r\n\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/jobs\">Job List</Link>\r\n                {\r\n                    user ?\r\n                        <div className='logged-user'>\r\n                            <span>{user.username}</span>\r\n                            <button onClick={() => {\r\n                                setUser(null);\r\n                                history.push('/');\r\n                            }\r\n                            }>Logout</button>\r\n\r\n                        </div> :\r\n                        <>  \r\n                            <Link className=\"push-right\" to=\"/login\">Login</Link>\r\n                            <Link className=\"push-right\" to=\"/register\">Registration</Link>\r\n                        </>\r\n                }\r\n            </div>\r\n\r\n        </StyledNavbar>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import  styled  from \"styled-components\";\r\n\r\nexport const StyledJobItem = styled.div`\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    box-shadow: 1px 5px 12px 0px rgba(0,0,0,0.4);\r\n    margin-bottom: 30px;\r\n    padding: 10px 20px;\r\n    &:last-child {\r\n        margin-bottom: 100px;\r\n    }\r\n\r\n    h3 {\r\n       color: #3d3d3d;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n        color: #3d3d3d;\r\n        &:hover {\r\n            text-decoration: underline;\r\n        }\r\n    }\r\n\r\n    .location {\r\n        width: 100px;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-around;\r\n\r\n        i {\r\n            color: #fff200;\r\n            font-size: 25px;\r\n            margin-top: 10px; \r\n        }\r\n    }\r\n\r\n    button:first-child {\r\n        background-color: #fffa65;\r\n        border: none;\r\n        outline: none;\r\n        padding: 10px 20px;\r\n        opacity: 0.75;\r\n        font-size: 15px;\r\n        border-radius: 5px;\r\n        cursor: pointer;\r\n        &:hover {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`\r\n\r\nexport const StyledDeleteButton = styled.button`\r\n    margin-left: 15px;\r\n    border: none;\r\n    outline: none;\r\n    padding: 10px 20px;\r\n    font-size: 15px;\r\n    border-radius: 5px;\r\n    color: #4b4b4b;\r\n    background-color: rgba(167, 14, 14, 0.4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: rgba(167, 14, 14, 0.6);\r\n    }\r\n`","import { Link } from 'react-router-dom';\r\nimport { deleteJobById } from '../../service';\r\nimport { StyledJobItem, StyledDeleteButton } from './StyledJobItem';\r\n\r\nconst Job = ({ job, setJobs, user }) => {\r\n    return (\r\n        <StyledJobItem>\r\n            <h3>{job.title}</h3>\r\n            <Link to={`/jobs/${job.id}/${job.company_info.name}`}>{job.company_info.name}</Link>\r\n            <div className=\"location\"><span><i className=\"fas fa-map-marker-alt\"></i></span><p>{job.location}</p></div>\r\n            <p>Created At: {job.createdAt}</p>\r\n            <p>{job.snippet}</p>\r\n            <Link to={`/jobs/${job.id}`}><button>See More</button></Link>\r\n            {user.role === 'admin' ? <StyledDeleteButton onClick={() => {\r\n                deleteJobById(job.id).then(() => {\r\n                    setJobs(prev => prev.filter(el => el.id !== job.id))\r\n                    console.log('obrisan')\r\n                })\r\n            }}>Delete</StyledDeleteButton> : ''}\r\n        </StyledJobItem>\r\n    )\r\n}\r\n\r\nexport default Job\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledFilter = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-bottom: 100px;\r\n    width: 80%;\r\n    padding: 25px;\r\n    margin: 0 auto 80px auto;\r\n    background-color: rgba(75, 75, 75, 0.8);\r\n    border-radius: 2px;\r\n\r\n    select, \r\n    input {\r\n        flex: 1 1 auto;\r\n        margin: 5px;\r\n        height: 50px;\r\n        border: none;\r\n        outline: none;\r\n        border-radius: 5px;\r\n        font-size: 17px;\r\n        color: #4b4b4b;\r\n        background-color: #fafafa;\r\n        text-indent: 5px;\r\n        &:focus {\r\n            box-shadow: 1px 5px 10px 0px #9e9e9e;\r\n        }\r\n        option {\r\n            &:checked {\r\n                font-weight: bold;\r\n                background-color: rgba(75, 75, 75, 0.1)\r\n            }\r\n        }\r\n    }\r\n`\r\n","import { StyledFilter } from \"./StyledFilter\";\r\n\r\nconst Filter = ({ jobs, setFilterInput, setLocation, setLevel }) => {\r\n\r\n    let locationArr = Array.from(new Set(jobs.map(job => job.location)));\r\n    let levels = Array.from(new Set(jobs.map(job => job.seniority)));\r\n\r\n    return (\r\n        <StyledFilter>\r\n            <input type=\"text\" onChange={(e) => setFilterInput(e.target.value)} placeholder=\"Enter job title or category....\" />\r\n\r\n            <select defaultValue={'default'} onChange={(e) => setLocation(e.target.value)}>\r\n                <option value=\"default\" disabled hidden>Choose Location</option>\r\n                {locationArr.map(location => <option key={location} value={location}>{location}</option>)}\r\n            </select>\r\n\r\n            <select defaultValue={'default'} onChange={(e) => setLevel(e.target.value)}>\r\n                <option value=\"default\" disabled hidden>Choose Level of Experience</option>\r\n                {levels.map(level => <option key={level} value={level}>{level}</option>)}\r\n            </select>\r\n        </StyledFilter>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledJobList = styled.div`\r\n    width: 100%;\r\n    min-height: 85vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 100px auto 30px auto;\r\n    color: #4b4b4b;\r\n\r\n    .current-state {\r\n        text-align: center;\r\n        font-size: 30px;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .empty-filter {\r\n        margin: 0 auto;\r\n        padding: 8px 120px;\r\n        border-radius: 30px;\r\n        background-color: rgba(255, 250, 101, 0.5);\r\n        font-weight: bold;\r\n        letter-spacing: 1px;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        margin: 100px 0 10px 0;\r\n        .current-state {\r\n            font-size: 25px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n        .current-state {\r\n            font-size: 20px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 440px) {\r\n        .empty-filter {\r\n            padding: 10px;\r\n            text-align: center;\r\n            font-size: 15px;\r\n            margin: 20px 0 100px 0;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        .current-state {\r\n            font-size: 12px;\r\n        }\r\n\r\n        .empty-filter {\r\n            padding: 5px 40px;\r\n        }\r\n    }\r\n`\r\n\r\nexport const StyledCreateNew = styled.div`\r\n    width: 90%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-bottom: 40px;\r\n\r\n    button {\r\n        cursor: pointer;\r\n        padding: 10px 50px;\r\n        border: none;\r\n        outline: none;\r\n        font-size: 17px;\r\n        background-color: #fffa65;\r\n        color: #4b4b4b;\r\n        border-radius: 2px;\r\n        box-shadow: 0.3em 0.3em 0 0 #fff200, inset 0.3em 0.3em 0 0 #fff200;\r\n        &:before {\r\n            content: '+';\r\n            padding-right: 20px;\r\n            font-size: 17px;\r\n        }\r\n        &:hover,\r\n        &:focus {\r\n            box-shadow: 0 0 0 #fff200, inset 6em 3.5em 0 0 #fff200;\r\n            color: #4b4b4b;\r\n        } \r\n        &:hover {\r\n            background-color: #fffa65;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        button {\r\n            padding: 10px 30px;\r\n            font-size: 15px;\r\n        }\r\n    }\r\n`\r\n","import { useState } from 'react';\r\nimport Job from '../jobItem/Job';\r\nimport Filter from '../Filter/Filter';\r\nimport { StyledCreateNew, StyledJobList } from './StyledJobList';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n\r\nconst JobList = ({ jobs, user, setJobs }) => {\r\n    const [filterInput, setFilterInput] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [level, setLevel] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    let companies = Array.from(new Set(jobs.map(job => job.company_info.name)));\r\n\r\n    let filteredOptions = jobs.filter(job =>\r\n        (job.title.toLowerCase().includes(filterInput.toLowerCase()) ||\r\n            job.category.toLowerCase().includes(filterInput.toLowerCase())) &&\r\n        job.location === location &&\r\n        job.seniority === level);\r\n\r\n    return user ? (\r\n        <StyledJobList>\r\n            <div className=\"current-state\">\r\n                <p>Currently {jobs.length} open work positions for {companies.length} companies.</p>\r\n            </div>\r\n            <Filter jobs={jobs} setFilterInput={setFilterInput} setLocation={setLocation} setLevel={setLevel} />\r\n            {user.role === 'admin' ? <StyledCreateNew><button onClick={() => history.push('/createjob')}>Create New</button></StyledCreateNew> : ''}\r\n            {filterInput.trim() !== '' && location !== '' && level !== '' ?\r\n                filteredOptions.map(job => <Job key={job.id} job={job} setJobs={setJobs} user={user}/>).length > 0 ?\r\n                    filteredOptions.map(job => <Job key={job.id} job={job} setJobs={setJobs} user={user}/>) :\r\n                    <div className=\"empty-filter\"><p>There's no result for this search!</p></div> :\r\n                jobs.map(job => <Job key={job.id} job={job} setJobs={setJobs} user={user}/>)\r\n            }\r\n        </StyledJobList>\r\n    )\r\n        :\r\n        <Redirect to='/login' />\r\n}\r\n\r\nexport default JobList\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledJobInfo = styled.div`\r\n    width: 100%;\r\n    min-height: 85vh;\r\n    display: flex; \r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    &::after {\r\n        content: ' ';\r\n        border-top: 80vh solid transparent;\r\n        border-right: 100vW solid #fffa65;\r\n        width: 0;\r\n        position: absolute;\r\n        z-index: -1;\r\n    } \r\n`\r\n\r\nexport const StyledInnerDiv = styled.div`\r\n    width: 80%;\r\n    color: #4b4b4b;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    h1 {\r\n        text-transform: uppercase;\r\n        letter-spacing: 2px;\r\n        text-shadow: 7px 7px 14px rgba(150, 150, 150, 0.83);    \r\n    }\r\n\r\n    a {\r\n        color: #3d3d3d;\r\n        &:hover {\r\n            text-decoration: underline;\r\n            color: #0d0d79;\r\n        }\r\n        &:active {\r\n            color: #0d0daf;\r\n        }\r\n\r\n    }\r\n\r\n    h4 span {\r\n        background: #4b4b4b;\r\n        color: #fafafa;\r\n        padding: 10px 30px;\r\n        margin-left: 10px;\r\n        border-radius: 2px;\r\n        opacity: 0.85;\r\n    }\r\n\r\n    p {\r\n        text-indent: 100px;\r\n        line-height: 30px;\r\n    }\r\n\r\n    p span {\r\n        padding: 10px 20px;\r\n        border-radius: 2px;\r\n        margin: 0 20px;\r\n        opacity: 0.85;\r\n    }\r\n\r\n    p span:first-child {\r\n        background: #fafafa;\r\n    }\r\n\r\n    p span:last-child {\r\n        background: #4b4b4b;\r\n        color: #fafafa;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        h1 {\r\n            font-size: 22px;\r\n        }\r\n\r\n        p {\r\n            font-size: 13px;\r\n        }\r\n\r\n        p:last-child {\r\n            text-indent: 10px;\r\n            span {\r\n                padding: 1px 30px;\r\n                display: block;\r\n                text-align: center;\r\n                margin-bottom: 5px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n        h1 {\r\n            font-size: 15px;\r\n        } \r\n        h3, h4 {\r\n            font-size: 14px;\r\n        }\r\n        p {\r\n            line-height: 25px;\r\n            text-indent: 60px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 440px) {\r\n        h1 {\r\n            font-size: 12px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        margin: 30px 0;\r\n    }\r\n`","import { useState, useEffect } from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { getJobById } from '../../service';\r\nimport { StyledInnerDiv, StyledJobInfo } from './StyledJobInfo';\r\n\r\nconst JobInfo = ({ user }) => {\r\n    const [job, setJob] = useState(null);\r\n\r\n    let { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getJobById(id).then(res => {\r\n            setJob(res.data);\r\n        })\r\n    }, []);\r\n\r\n    return user ? (\r\n        <>\r\n            <StyledJobInfo>\r\n                <StyledInnerDiv>\r\n                    <h1>{job?.title}</h1>\r\n                    <h3><Link to={`/jobs/${job?.id}/${job?.company_info.name}`}>{job?.company_info.name}</Link>, {job?.location}</h3>\r\n                    <h4>Level of experience : <span>{job?.seniority.charAt(0).toUpperCase() + String(job?.seniority.slice(1))}</span></h4>\r\n                    <p>{job?.job_description}</p>\r\n                    <p>If you are interested in this position you can contact us: <span>{job?.company_info.contact[0]}</span><span>{job?.company_info.contact[1]}</span></p>\r\n                </StyledInnerDiv>\r\n            </StyledJobInfo>\r\n        </>\r\n    )\r\n        :\r\n        <Redirect to='/login' />\r\n}\r\n\r\nexport default JobInfo\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledHome = styled.div`\r\n    width: 100%;\r\n    min-height: 85vh;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    background-image: url('/background.jpg');\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: 100% 100%;\r\n    opacity: 0.85;\r\n\r\n    h1 {\r\n        text-transform: uppercase;\r\n        color: #4b4b4b;\r\n        font-size: 40px;\r\n        letter-spacing: 5px;\r\n        text-shadow: 7px 7px 14px rgba(150, 150, 150, 0.83);\r\n        overflow: hidden;\r\n        border-right: .10em solid #4b4b4b;\r\n        white-space: nowrap;\r\n        margin: 100px auto 20px auto;\r\n        letter-spacing: .15em;\r\n        animation: typing 3.5s steps(40, end),\r\n                   blink-caret .75s step-end infinite; \r\n    }\r\n\r\n    @keyframes typing {\r\n        from {width: 0}\r\n        to { width: 40%}\r\n    }\r\n\r\n    @keyframes blink-caret {\r\n        from, to {border-color: transparent}\r\n        50% {border-color: #4b4b4b}\r\n    }\r\n\r\n    a {\r\n        color: #4b4b4b;\r\n        text-decoration: none;\r\n        margin-top: -50px;\r\n        font-size: 18px;\r\n        &:hover {\r\n            text-decoration: underline;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        height: 90vh;\r\n        background-repeat: no-repeat;\r\n        h1 {\r\n            font-size: 35px;\r\n        }\r\n        a {\r\n            font-size: 15px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 440px) {\r\n        h1 {\r\n            font-size: 27px;\r\n        }\r\n    }\r\n\r\n   @media (max-width: 360px) {\r\n       width: 100%;\r\n       h1 {\r\n           font-size: 22px;\r\n       }\r\n       a {\r\n           font-size: 13px;\r\n       }\r\n   }\r\n`\r\n\r\nexport const StyledDiv = styled.div`\r\n    width: 70%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    @media (max-width: 768px) {\r\n        width: 75%;\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        width: 85%;\r\n    }\r\n`\r\n\r\nexport const StyledCurrent = styled.div`\r\n        width: 80%;\r\n        height: 40vh;\r\n        margin: 60px auto;\r\n        border: 3px solid #4b4b4b;\r\n        box-shadow: 1px 5px 16px 2px #d6cb2e;\r\n        padding: 10px 20px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 23px;\r\n        border-radius: 2% 6% 5% 4% / 1% 1% 2% 4%;\r\n        letter-spacing: 1px;\r\n        text-align: center;\r\n        position: relative;\r\n            &::before {\r\n                content: '';\r\n                border: 2px solid #fff200;\r\n                display: block;\r\n                width: 100%;\r\n                height: 100%;\r\n                position: absolute;\r\n                border-radius: 1% 1% 2% 4% / 2% 6% 5% 4%;\r\n            }\r\n\r\n        @media (max-width: 768px) {\r\n            font-size: 17px;\r\n        }\r\n        `\r\n\r\nexport const StyledPrevious = styled.div`\r\n    font-size: 40px;\r\n    color: #4b4b4b;\r\n    text-shadow: 7px 7px 14px rgba(150, 150, 150, 0.83);\r\n    opacity: 0.85;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 360px) {\r\n        font-size: 30px;\r\n    }\r\n`\r\n\r\nexport const StyledNext = styled.div`\r\n    font-size: 40px;\r\n    color: #4b4b4b;\r\n    text-shadow: 7px 7px 14px rgba(150, 150, 150, 0.83);\r\n    opacity: 0.85;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 360px) {\r\n        font-size: 30px;\r\n    }\r\n`","import { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { StyledHome, StyledDiv, StyledCurrent, StyledPrevious, StyledNext } from \"./StyledHome\"\r\n\r\nconst Home = ({ jobs, user }) => {\r\n    const [current, setCurrent] = useState(0);\r\n\r\n    const previousJob = () => current === 0 ? setCurrent(Math.floor((jobs.length / 2)) - 1) : setCurrent(current - 1);\r\n    const nextJob = () => jobs.length - 1 === current ? setCurrent(0) : setCurrent(current + 1);\r\n\r\n    return (\r\n        <StyledHome>\r\n            <h1>Find Your Dream Job</h1>\r\n            <StyledDiv>\r\n                <StyledPrevious onClick={previousJob}>\r\n                    <i className=\"fas fa-chevron-left\"></i>\r\n                </StyledPrevious>\r\n                <StyledCurrent>\r\n                    <p>&#10032; {jobs[current]?.title} &#10032;</p>\r\n                    <p>{jobs[current]?.company_info.name}</p>\r\n                </StyledCurrent>\r\n                <StyledNext onClick={nextJob}>\r\n                    <i className=\"fas fa-chevron-right\"></i>\r\n                </StyledNext>\r\n            </StyledDiv>\r\n            {user ?\r\n                <Link to='/jobs'>You want to see more about these jobs? Click here!</Link>\r\n                :\r\n                <Link to='/login'>You want to see more about these jobs? Click here!</Link>}\r\n        </StyledHome>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledLogin = styled.div`\r\n    width: 100%;\r\n    min-height: 85vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const StyledLoginForm = styled.div`\r\n    width: 400px;\r\n    height: 600px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #4b4b4b;        \r\n    box-shadow: 1px 5px 12px 0px rgba(0,0,0,0.4);\r\n\r\n    h2 {\r\n        text-transform: uppercase;\r\n        letter-spacing: 1px;\r\n    }\r\n\r\n    form {\r\n        width: 100%;\r\n        margin-top: 30px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    form input {\r\n        font-size: 15px;\r\n        padding: 10px 20px 10px 5px;\r\n        border: none;\r\n        outline: none;\r\n        margin-top: 20px;\r\n        width: 350px;\r\n        border-radius: 2px;\r\n        text-indent: 25px\r\n    }\r\n\r\n    input:focus:not(input[type=\"submit\"]) {\r\n        box-shadow: 0 0 0 2px rgba(216, 219, 33, 0.4);\r\n    }\r\n\r\n    input[type=\"submit\"] {\r\n        cursor: pointer;\r\n        background-color: #4b4b4b;\r\n        opacity: 0.85;\r\n        color: #fafafa;\r\n        text-transform: uppercase;\r\n        letter-spacing: 1px;\r\n        &:hover {\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n   form div {\r\n       position: relative;\r\n   }\r\n\r\n   form div i {\r\n       position: absolute;\r\n       left: 5px;\r\n       top: 30px;\r\n       color: #4b4b4b;\r\n       font-size: 18px;\r\n   }\r\n\r\n   form a {\r\n       text-align: center;\r\n       margin-top: 50px;\r\n       text-decoration: none;\r\n       &:hover {\r\n        text-decoration: underline;\r\n       }\r\n   }\r\n\r\n   .error-msg {\r\n        font-size: 13px;\r\n        color: #e05555;\r\n        text-align: center;\r\n        font-weight: bold;\r\n   }\r\n\r\n   @media (max-width: 768px) {\r\n       height: 550px;\r\n       margin: 60px 0;\r\n   }\r\n\r\n   @media (max-width: 360px) {\r\n      height: 600px\r\n   }\r\n`\r\n\r\nexport const StyledLogo = styled.div`\r\n    background-color: #fffa65;\r\n    width: 150px;\r\n    height: 150px;\r\n    margin: 0 auto;\r\n    border-radius: 50%;\r\n    margin-bottom: 10px;\r\n\r\n    i {\r\n        font-size: 70px;\r\n        line-height: 150px;\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n`","import { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { getUsers } from '../../service';\r\nimport { StyledLogin, StyledLoginForm, StyledLogo } from './StyledLogin';\r\n\r\nconst Login = ({ setUser }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const isValid = (user) => {\r\n        if (email.trim() !== user?.email) {\r\n            setEmailError('Incorrect email address!')\r\n        } else {\r\n            setEmailError('');\r\n        }\r\n        if (password.trim() !== user?.password) {\r\n            setPasswordError('Incorrect password!')\r\n        } else {\r\n            setPasswordError('');\r\n        }\r\n        if (email.trim() !== user?.email || password.trim() !== user?.password) {\r\n            return false\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledLogin>\r\n            <StyledLoginForm onSubmit={(e) => {\r\n                e.preventDefault();\r\n                getUsers().then(res => {\r\n                    let user = res.data.find(el => el.email === email && el.password === password);\r\n                    if (user) {\r\n                        setUser(user);\r\n                        history.push('/jobs');\r\n\r\n                    } else {\r\n                        isValid(user);\r\n                    }\r\n                })\r\n            }}>\r\n                <StyledLogo>\r\n                    <i className=\"fas fa-business-time\"></i>\r\n                </StyledLogo>\r\n                <h2>Sign in to your account</h2>\r\n                <form>\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Enter email address...\" onChange={(e) => setEmail(e.target.value)} />\r\n                        <i className=\"far fa-user\"></i>\r\n                        <p className=\"error-msg\">{emailError}</p>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"password\" placeholder=\"Enter password...\" onChange={(e) => setPassword(e.target.value)} />\r\n                        <i className=\"fas fa-unlock-alt\"></i>\r\n                        <p className=\"error-msg\">{passwordError}</p>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"submit\" value=\"Sign In\" />\r\n                    </div>\r\n                    <Link to='/register'>Don't have an account? Sign Up Here!</Link>\r\n                </form>\r\n            </StyledLoginForm>\r\n        </StyledLogin>\r\n\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledRegisterBack = styled.div`\r\n        width: 100%;\r\n        height: 500px;\r\n\r\n    div {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        box-shadow: 1px 5px 12px 0px rgba(0,0,0,0.4);\r\n        text-align: center;\r\n        color: #4b4b4b;\r\n\r\n        i {\r\n            font-size: 130px;\r\n            color: rgba(0, 128, 0, 0.4);\r\n            margin-bottom: 30px;\r\n        }\r\n\r\n        p {\r\n            width: 80%;\r\n            height: 70px;\r\n            line-height: 70px;\r\n            background-color: rgba(0, 128, 0, 0.4);\r\n            color: #fafafa;\r\n            font-size: 18px;\r\n            margin-bottom: 100px;\r\n            font-weight: bold;\r\n            border-radius: 3px;\r\n            letter-spacing: 1px;\r\n        }\r\n\r\n        a {\r\n            font-size: 20px;\r\n            color: #4b4b4b;\r\n            text-decoration: none;\r\n            text-transform: uppercase;\r\n            padding: 10px 30px;\r\n            border-radius: 2px;\r\n            font-weight: bold;\r\n            background-color: rgba(255, 250, 101, 0.5);\r\n            &:hover {\r\n                background-color: rgba(255, 250, 101, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n       div p {\r\n           font-size: 15px;\r\n       }\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n        div p {\r\n            font-size: 12px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 440px) {\r\n        display: flex;\r\n        justify-content: center;\r\n        div p {\r\n            padding: 5px 2px;\r\n            line-height: 30px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        div p {\r\n            padding: 5px 1px;\r\n        }\r\n    }\r\n      \r\n`","import { Link } from 'react-router-dom';\r\nimport { StyledRegisterBack } from './StyledRegisterBack';\r\n\r\nconst BackRegister = () => {\r\n    return (\r\n        <StyledRegisterBack>\r\n            <div>\r\n                <i className=\"far fa-check-circle\"></i>\r\n                <p>You have successfully registered! &#9787;</p>\r\n                <span>Now, you're ready to </span><br></br><Link to='/login'>Login</Link>\r\n            </div>\r\n        </StyledRegisterBack>\r\n    )\r\n}\r\n\r\nexport default BackRegister;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledRegisterFront = styled.div`\r\n    width: 100%;\r\n    min-height: 85vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    form {\r\n        width: 100%;\r\n        min-height: 500px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding: 10px 30px;\r\n        box-shadow: 1px 5px 12px 0px rgba(0,0,0,0.4);\r\n        text-align: center;\r\n        color: #4b4b4b;\r\n\r\n    h2 {\r\n        text-transform: uppercase;\r\n        margin: 50px 0 20px 0;\r\n        letter-spacing: 1px;\r\n    }\r\n\r\n    ul {\r\n        list-style-type: none;\r\n        padding: 0;\r\n        max-width: 800px;\r\n        margin: 0 auto;\r\n        li {\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            align-items: center;\r\n            label {\r\n                padding: 8px;\r\n                font-weight: 300;\r\n                letter-spacing: 1px;\r\n                text-transform: uppercase;\r\n            }\r\n        }\r\n    }\r\n        ul  li  label {\r\n            flex: 1 0 120px;\r\n            margin-right: 50px\r\n        }\r\n\r\n        ul  li  label + * {\r\n            flex: 1 0 220px;\r\n        }\r\n\r\n        ul li input {\r\n            border: 2px solid #eee;\r\n            border-radius: 3px;\r\n            outline: none;\r\n            padding: 8px 20px;\r\n            &:hover:not(input[type=\"submit\"]),\r\n            &:focus-within {\r\n                background-color: #eee;\r\n\r\n            }\r\n        }\r\n\r\n        input[type=\"submit\"] {\r\n            cursor: pointer;\r\n            margin-left: auto;\r\n            text-transform: uppercase;\r\n            letter-spacing: 1px;\r\n            border-radius: 2px;\r\n            background-color: #4b4b4b;\r\n            color: #fafafa;\r\n            opacity: 0.85;\r\n            &:hover {\r\n                opacity: 1;\r\n            }\r\n        }\r\n\r\n        .error-msg,\r\n        .unique-error {\r\n            font-size: 13px;\r\n            color: #e05555;\r\n            text-align: center;\r\n            font-weight: bold;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n       form {\r\n           height: 350px;\r\n           h2 {\r\n               font-size: 20px;\r\n               margin: 20px 0 10px 0;\r\n           }\r\n           ul li label {\r\n               font-size: 12px;\r\n               margin: 0 auto;\r\n           }\r\n           ul li input {\r\n            padding: 5px 20px;\r\n           }\r\n       }\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n        form {\r\n            width: 150%;\r\n            h2 {\r\n                font-size: 15px;\r\n            }\r\n        }\r\n        \r\n    }\r\n`\r\n","import { useRegister } from '../../hooks/useRegister';\r\nimport { useRegisterError } from '../../hooks/useRegisterError';\r\nimport { getUsers, postUser } from '../../../service';\r\nimport { StyledRegisterFront } from './StyledRegisterFront';\r\n\r\nconst FrontRegister = ({ rotate }) => {\r\n    const [firstName, setFirstName, lastName, setLastName, email, setEmail, password, setPassword, confirmedPassword, setConfirmedPassword] = useRegister();\r\n    const [firstNameError, setFirstNameError, lastNameError, setLastNameError, emailError, setEmailError, passwordError, setPasswordError, confirmedPasswordError, setConfirmedPasswordError, uniqueError, setUniqueError] = useRegisterError();\r\n\r\n    const validateEmail = (email) => {\r\n        const emailRegEx = /\\S+@\\S+\\.\\S+/;\r\n        return email.match(emailRegEx);\r\n    }\r\n\r\n    const validatePassword = (password) => {\r\n        const passwordRegEx = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\r\n        return password.match(passwordRegEx);\r\n    }\r\n\r\n    const isValid = () => {\r\n        if (firstName.trim() === '') {\r\n            setFirstNameError('You must enter your first name!');\r\n        } else {\r\n            setFirstNameError('');\r\n        }\r\n        if (lastName.trim() === '') {\r\n            setLastNameError('You must enter your last name!');\r\n        } else {\r\n            setLastNameError('');\r\n        }\r\n        if (!validateEmail(email)) {\r\n            setEmailError('Invalid email format!')\r\n        } else {\r\n            setEmailError('');\r\n        }\r\n        if (!validatePassword(password)) {\r\n            setPasswordError('Password must have 8 characters, at least one number and at least one letter!')\r\n        } else {\r\n            setPasswordError('');\r\n        }\r\n        if (confirmedPassword !== password) {\r\n            setConfirmedPasswordError('Passwords do not match!')\r\n        } else {\r\n            setConfirmedPasswordError('');\r\n        }\r\n        if (firstName.trim() === '' || lastName.trim() === '' || !validateEmail(email) || !validatePassword(password) || confirmedPassword !== password) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const generateId = (arr) => {\r\n        const id = arr.length > 0 ? Math.max(...arr.map(user => user.id)) + 1 : 1;\r\n        return id;\r\n    }\r\n\r\n    const clearAllInputs = () => {\r\n        setFirstName('');\r\n        setLastName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmedPassword('');\r\n    }\r\n\r\n    return (\r\n        <StyledRegisterFront>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                if (!isValid()) {\r\n                    return\r\n                }\r\n                getUsers().then(res => {\r\n                    let newUser = {\r\n                        id: generateId(res.data),\r\n                        username: firstName + lastName.charAt(0),\r\n                        firstName: firstName,\r\n                        lastName: lastName,\r\n                        email: email,\r\n                        password: password,\r\n                        confirm_password: confirmedPassword\r\n                    };\r\n                    if (!res.data.some(user => user.email === email)) {\r\n                        postUser(newUser).then(() => {\r\n                            setUniqueError('');\r\n                            clearAllInputs();\r\n                            rotate();\r\n                        })\r\n                    } else {\r\n                        setUniqueError('User with that email already exist!')\r\n                    }\r\n                })\r\n            }}>\r\n                <h2>Create an Account</h2>\r\n                <p className=\"unique-error\">{uniqueError}</p>\r\n                <ul>\r\n                    <li>\r\n                        <label htmlFor=\"first_name\">First Name</label>\r\n                        <input value={firstName} type=\"text\" name=\"first_name\" id=\"first-name\" onChange={(e) => setFirstName(e.target.value)} />\r\n                    </li>\r\n                    <p className=\"error-msg\">{firstNameError}</p>\r\n                    <li>\r\n                        <label htmlFor=\"last_name\">Last Name</label>\r\n                        <input value={lastName} type=\"text\" name=\"last_name\" id=\"last-name\" onChange={(e) => setLastName(e.target.value)} />\r\n                    </li>\r\n                    <p className=\"error-msg\">{lastNameError}</p>\r\n                    <li>\r\n                        <label htmlFor=\"email\">E-mail</label>\r\n                        <input value={email} type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)} />\r\n                    </li>\r\n                    <p className=\"error-msg\">{emailError}</p>\r\n                    <li>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input value={password} type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n                    </li>\r\n                    <p className=\"error-msg\">{passwordError}</p>\r\n                    <li>\r\n                        <label htmlFor=\"confirm_password\">Confirm Password</label>\r\n                        <input value={confirmedPassword} type=\"password\" name=\"confirm_password\" id=\"confirm_password\" onChange={(e) => setConfirmedPassword(e.target.value)} />\r\n                    </li>\r\n                    <p className=\"error-msg\">{confirmedPasswordError}</p>\r\n                    <li>\r\n                        <input type=\"submit\" value=\"Sign Up\" />\r\n                    </li>\r\n                </ul>\r\n            </form>\r\n        </StyledRegisterFront>\r\n    )\r\n}\r\n\r\nexport default FrontRegister\r\n","import { useState } from 'react';\r\n\r\nexport const useRegister = () => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmedPassword, setConfirmedPassword] = useState('');\r\n\r\n    return [firstName, setFirstName, lastName, setLastName, email, setEmail, password, setPassword, confirmedPassword, setConfirmedPassword];\r\n}","import { useState } from 'react';\r\n\r\nexport const useRegisterError= () => {\r\n    const [firstNameError, setFirstNameError] = useState('');\r\n    const [lastNameError, setLastNameError] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n    const [confirmedPasswordError, setConfirmedPasswordError] = useState('');\r\n    const [uniqueError, setUniqueError] = useState('');\r\n\r\n    return [firstNameError, setFirstNameError, lastNameError, setLastNameError, emailError, setEmailError, passwordError, setPasswordError, confirmedPasswordError, setConfirmedPasswordError, uniqueError, setUniqueError];\r\n}","import styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n        transition: transform 2s;\r\n        width: 50%;\r\n        /* margin: 0 auto; */\r\n        /* display: flex; */\r\n        /* flex-direction: column; */\r\n        /* align-items: center; */\r\n        /* justify-content: center; */\r\n    &.rotate {\r\n        transform: rotateY(360deg);\r\n    }\r\n`","import { useState } from 'react';\r\nimport { StyledCard } from './StyledCard';\r\n\r\nconst RegisterCard = ({ Front, Back, isFront, setIsFront }) => {\r\n    const [transform, setTransform] = useState('');\r\n\r\n    const rotate = () => {\r\n            setIsFront(false);\r\n            setTransform('rotate');\r\n    }\r\n\r\n    return (\r\n        <StyledCard className={transform}>\r\n            {\r\n                isFront ? <Front rotate={rotate} /> : <Back />\r\n            }\r\n        </StyledCard>\r\n    )\r\n}\r\n\r\nexport default RegisterCard","import styled from 'styled-components';\r\n\r\nexport const StyledRegister = styled.div`\r\n    width: 100%;\r\n    height: 85vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n    ","import { useState } from 'react';\r\nimport BackRegister from '../backRegister/BackRegister';\r\nimport FrontRegister from '../frontRegister/FrontRegister';\r\nimport RegisterCard from '../registerCard/RegisterCard';\r\nimport { StyledRegister } from './StyledRegister';\r\n\r\nconst Register = () => {\r\n    const [front, setFront] = useState(true);\r\n\r\n    return (\r\n        <StyledRegister>\r\n            <RegisterCard Front={FrontRegister} Back={BackRegister} isFront={front} setIsFront={setFront} />\r\n        </StyledRegister>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledFooter = styled.footer`\r\n    width: 100%;\r\n    height: 5vh;\r\n    position: absolute;\r\n    bottom: 0; \r\n    margin-top: 40px;\r\n    p {\r\n        text-align: center;\r\n        font-size: 15px;\r\n        color: #4b4b4b;\r\n        line-height: 5vh;\r\n        margin: 0;\r\n    }\r\n`","// import { useLocation } from 'react-router-dom';\r\nimport { StyledFooter } from './StyledFooter';\r\n\r\nconst Footer = () => {\r\n// const { pathname } = useLocation();\r\n    return (\r\n        <StyledFooter>\r\n            <p>&#169;2021. All right reserved. Dušica Žeravić.</p>\r\n        </StyledFooter>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledCompanyInfo = styled.div`\r\n    width: 100%;\r\n    min-height: 85vh;\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nexport const StyledLeft = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex: 1 1 auto;\r\n    width: 40%;\r\n    height: 550px;\r\n    margin: 30px 30px;\r\n    background-color: #fffa65;\r\n    box-shadow: 1px 1px 6px 0px rgba(50, 50, 50, 0.48);\r\n    h2 {\r\n        font-size: 30px;\r\n        padding: 20px 40px;\r\n        position: relative;\r\n        &::after, \r\n        &::before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            bottom: 0;\r\n            right: 0;\r\n            border: 2px solid #000;\r\n            transition: transform .2s;\r\n        }\r\n        &::after {\r\n            transform: translate(3px, 3px);\r\n        }\r\n        &::before {\r\n            transform: translate(-3px, -3px)\r\n        }\r\n        &:hover::after,\r\n        &:hover::before {\r\n            transform: translate(0);\r\n        }\r\n    }\r\n\r\n    h3 {\r\n        font-size: 20px;\r\n        letter-spacing: 1px;\r\n    } \r\n\r\n    div {\r\n        display: flex;\r\n        align-items: center;\r\n        span {             \r\n            font-size: 25px;\r\n            color: #3d3d3d;             \r\n            margin-right: 20px;         \r\n        }\r\n    } \r\n\r\n    ul {\r\n        margin-left: -30px;\r\n        span {\r\n            vertical-align: middle;\r\n        }\r\n        li {\r\n            list-style-type: none;\r\n            margin-bottom: 20px;\r\n            vertical-align: middle;\r\n     }\r\n    }\r\n\r\n    a {\r\n        color: #4b4b4b;\r\n        text-decoration: none;\r\n        background-color: #3d3d3d;\r\n        opacity: 0.75;\r\n        padding: 10px 20px;\r\n        color: #fafafa;\r\n        border-radius: 2px;\r\n        &:hover {\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        margin-bottom: 60px;\r\n    }\r\n\r\n    @media (max-width: 440px) {\r\n        h2 {\r\n            font-size: 23px;\r\n            padding: 15px 10px;\r\n        }\r\n        div {\r\n            margin-left: 20px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        h2 {\r\n            font-size: 20px;\r\n            padding: 15px 10px;\r\n        }\r\n        h3 {\r\n            font-size: 18px;\r\n        }\r\n        div {\r\n            margin-left: 20px;\r\n        }\r\n        div span {\r\n            font-size: 20px;\r\n            margin: 0 10px;\r\n        }\r\n        ul li {\r\n            font-size: 15px;\r\n            margin-left: 50px;\r\n        }\r\n    }\r\n`\r\n\r\nexport const StyledRight = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    flex: 1 1 auto;\r\n    width: 50%;\r\n    height: 550px;\r\n    margin: 30px 30px 30px 30px;\r\n    background-color: #f5f5f5;\r\n    box-shadow: 1px 1px 6px 0px rgba(50, 50, 50, 0.48);\r\n    p {\r\n        padding: 20px 30px;\r\n        line-height: 40px;\r\n        word-spacing: 2px;\r\n    }\r\n\r\n    p:last-child {\r\n        font-weight: 600;\r\n    }\r\n\r\n    @media (max-width: 440px) {\r\n        p:first-child {\r\n            font-size: 13px;\r\n            padding: 10px 10px;\r\n            margin: 0;\r\n        }\r\n        p:last-child {\r\n            font-size: 14px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        p:first-child {\r\n            font-size: 12px;\r\n            padding-top: 50px;\r\n            margin: 0;\r\n        }\r\n\r\n        p:last-child {\r\n            font-size: 13px;\r\n            margin: 0;\r\n            padding: 0 0 40px 30px;\r\n        }\r\n    }\r\n`","import { useState, useEffect } from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { getJobById } from '../../service';\r\nimport { StyledCompanyInfo, StyledLeft, StyledRight } from './StyledCompanyInfo';\r\n\r\nconst CompanyInfo = ({ user }) => {\r\n    const [job, setJob] = useState(null);\r\n\r\n    let { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getJobById(id).then(res => {\r\n            setJob(res.data);\r\n        })\r\n    }, []);\r\n\r\n    return user ? (\r\n        <StyledCompanyInfo>\r\n            <StyledRight>\r\n                <p>{job?.company_info.general_info}</p>\r\n                <p>Number of employees : <span>{job?.company_info.number_of_employees}</span></p>\r\n            </StyledRight>\r\n            <StyledLeft>\r\n                <h2>{job?.company_info.name}</h2>\r\n                <h3>How can you find us?</h3>\r\n                <div><span><i className=\"fas fa-map-marker-alt\"></i></span><p>{job?.company_info.location}</p></div>\r\n                <ul>\r\n                    <div><li><span><i className=\"fas fa-phone-alt\"></i></span>{job?.company_info.contact[0]}</li></div>\r\n                    <div><li><span><i className=\"fas fa-envelope\"></i></span>{job?.company_info.contact[1]}</li></div>\r\n                </ul>\r\n                {job?.company_info.link ? <a href={job?.company_info.link} target=\"_blank\">See more</a> : ''}\r\n            </StyledLeft>\r\n        </StyledCompanyInfo>\r\n    )\r\n        :\r\n        <Redirect to='/login' />\r\n}\r\n\r\nexport default CompanyInfo\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    html {\r\n        font-family: 'Libre Franklin', sans-serif;\r\n    }\r\n\r\n    body {\r\n        margin: 0;\r\n        padding: 0;\r\n        background-color: #fafafa;\r\n    } \r\n\r\n    #root {\r\n        position: relative;\r\n        min-height: 100vh;\r\n    }\r\n`\r\n\r\nexport default GlobalStyle;","import styled from 'styled-components';\r\n\r\nexport const StyledCreateJob = styled.div`\r\n   width: 100%;\r\n   display: flex; \r\n   flex-direction: column;\r\n   justify-content: center;\r\n`\r\n\r\nexport const StyledForm = styled.form`\r\n    width: 70%;\r\n    margin: 60px auto;\r\n    box-shadow: 1px 2px 10px -2px rgba(0,0,0,0.55);\r\n    background-color: #fff;\r\n\r\n    ul {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        list-style-type: none;\r\n        li {\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            align-items: center;\r\n            margin-left: 100px;\r\n            width: 90%;\r\n            label:not(.seniority-label), \r\n            p {\r\n                width: 100%;\r\n                letter-spacing: 1px;\r\n                font-weight: 600;\r\n            }\r\n            \r\n            input:not([type=\"radio\"]), \r\n            textarea, \r\n            select {\r\n                width: 80%;\r\n                border: none;\r\n                outline: none;\r\n                background-color: #fafafa;\r\n                padding: 10px 10px;\r\n                margin: 10px 0 20px 0;\r\n                border: 2px solid #eee;;\r\n                border-radius: 2px;\r\n                &:focus {\r\n                    box-shadow: 0 0 0 2px rgba(216, 219, 33, 0.4);\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    h3 {\r\n        border-bottom: 1px solid #dadada;\r\n        margin: 20px 0  0 20px;\r\n        font-size: 25px;\r\n        font-weight: 600;\r\n        color: #fff200;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n       ul li {\r\n           margin-left: 10px;\r\n           label {\r\n               padding-bottom: 10px;\r\n           }\r\n       }\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n        width: 85%;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n        ul li {\r\n            input:not([type=\"radio\"]), \r\n            textarea, \r\n            select {\r\n                width: 350px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @media (max-width: 440px) {\r\n        width: 80%;\r\n        ul li {\r\n            input:not([type=\"radio\"]), \r\n            textarea, \r\n            select {\r\n                width: 300px;\r\n            }\r\n        }   \r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        ul li {\r\n            margin-left: 0;\r\n            label:not(.seniority-label), \r\n            p {\r\n                width: 250px;\r\n            }\r\n            input:not([type=\"radio\"]), \r\n            textarea, \r\n            select {\r\n                width: 250px;\r\n            }\r\n        } \r\n    }\r\n`\r\nexport const StyledJobInfo = styled.div`\r\n    .seniority {\r\n        margin-bottom: 20px; \r\n        input {\r\n            margin-right: 10px;\r\n            vertical-align: middle;\r\n        }\r\n        label {\r\n            margin-right: 30px;\r\n            vertical-align: middle;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 440px) {\r\n        .seniority {\r\n            width: 90px;\r\n            label {\r\n                margin-right: 30px;\r\n            }\r\n        }\r\n    }\r\n`\r\nexport const StyledCompanyInfo = styled.div`\r\n    \r\n`\r\n\r\nexport const StyledErrorMsg = styled.div`\r\n    .error-msg {\r\n        width: 60%;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        margin: 0 auto;\r\n        text-align: center;\r\n        border-radius: 2px;\r\n        color: #fafafa;\r\n        background-color: rgba(233, 30, 30, 0.5);\r\n    }\r\n`\r\n\r\nexport const StyledSuccessMsg = styled.div`\r\n    .success-msg {\r\n        width: 60%;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        margin: 0 auto;\r\n        text-align: center;\r\n        border-radius: 2px;\r\n        color: #fafafa;\r\n        background-color: rgba(33, 119, 47, 0.4);\r\n    }\r\n`\r\n\r\nexport const StyledButton = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n   input[type=\"submit\"] {\r\n            padding: 8px 60px;\r\n            margin: 20px auto;\r\n            cursor: pointer;\r\n            outline: none;\r\n            border: none;\r\n            text-transform: uppercase;\r\n            letter-spacing: 1px;\r\n            border-radius: 2px;\r\n            background-color: #4b4b4b;\r\n            color: #fafafa;\r\n            opacity: 0.85;\r\n            font-weight: 600;\r\n            &:hover {\r\n                opacity: 1;\r\n            }\r\n        }\r\n` \r\n","import { usePostJob } from '../hooks/usePostJob';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { postJob } from '../../service';\r\nimport { StyledButton, StyledCreateJob, StyledForm, StyledJobInfo, StyledCompanyInfo, StyledErrorMsg, StyledSuccessMsg } from './StyledCreateJob';\r\n\r\nconst CreateJob = ({ user, jobs, setJobs }) => {\r\n    const [jobTitle, setJobTitle, jobLocation, setJobLocation, seniority, setSeniority, jobCategory, setJobCategory, jobSnippet, setJobSnippet, jobDescription, setJobDescription, companyName, setCompanyName, companyInfo, setCompanyInfo, location, setLocation, employeesNumber, setEmployeesNumber, phone, setPhone, email, setEmail, url, setUrl, errorMessage, setErrorMessage, successMessage, setSuccessMessage] = usePostJob();\r\n\r\n    let categories = Array.from(new Set(jobs.map(job => job.category)));\r\n    let levels = Array.from(new Set(jobs.map(job => job.seniority)));\r\n\r\n    const generateId = () => {\r\n        return Math.max(0, ...jobs.map(job => job.id)) + 1;\r\n    };\r\n\r\n    const getDate = () => {\r\n        const date = new Date();\r\n        const day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\r\n        const month = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(date);\r\n        const year = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\r\n        return `${day}.${month}.${year}.`\r\n    }\r\n\r\n    const isValid = () => {\r\n        if (jobTitle.trim() === '' || jobLocation.trim() === '' || seniority === '' || jobCategory === '' || jobSnippet.trim() === '' || jobDescription.trim() === '' || companyName.trim() === '' || companyInfo.trim() === '' || location.trim() === '' || employeesNumber.trim() === '' || phone.trim() === '' || email.trim() === '' || url.trim() === '') {\r\n            setErrorMessage(<p className=\"error-msg\">All fields must be filled!</p>);\r\n            setTimeout(() => {\r\n                setErrorMessage('');\r\n            }, 2000);\r\n            return false;\r\n        } else {\r\n            setSuccessMessage(<p className=\"success-msg\">Successfully saved!</p>);\r\n            setTimeout(() => {\r\n                setSuccessMessage('');\r\n            }, 5000);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return user ? (\r\n        <StyledCreateJob>\r\n            <StyledForm onSubmit={(e) => {\r\n                e.preventDefault(e);\r\n\r\n                if (isValid()) {\r\n                    let newJob = {\r\n                        id: generateId(),\r\n                        title: jobTitle,\r\n                        location: jobLocation,\r\n                        seniority: seniority,\r\n                        category: jobCategory,\r\n                        createdAt: getDate(),\r\n                        snippet: jobSnippet,\r\n                        job_description: jobDescription,\r\n                        company_info: {\r\n                            name: companyName,\r\n                            general_info: companyInfo,\r\n                            location: location,\r\n                            number_of_employees: employeesNumber,\r\n                            contact: [\r\n                                phone, email\r\n                            ],\r\n                            link: url\r\n                        }\r\n                    };\r\n\r\n                    postJob(newJob).then(res => {\r\n                        setJobs(prev => [...prev, res.data]);                       \r\n                    });\r\n                }\r\n            }}>\r\n\r\n                <StyledJobInfo>\r\n                    <h3><span>Job Info</span></h3>\r\n                    <ul>\r\n                        <li>\r\n                            <label htmlFor=\"title\">Job Title</label>\r\n                            <input type=\"text\" name=\"title\" className=\"form-control\" placeholder=\"Job Title...\" onChange={(e) => setJobTitle(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <label>Location</label>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Location...\" onChange={(e) => setJobLocation(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <p>Seniority</p>\r\n                            {levels.map(level => <div className=\"seniority\" key={level}>\r\n                                <input type=\"radio\" name=\"seniority\" id={level} value={level} onChange={(e) => setSeniority(e.target.value)} />\r\n                                <label className=\"seniority-label\" htmlFor={level}>{level}</label>\r\n                            </div>\r\n                            )}\r\n                        </li>\r\n                        <li>\r\n                            <label>Category</label>\r\n                            <select defaultValue={'default'} onChange={(e) => setJobCategory(e.target.value)}>\r\n                                <option value=\"default\" disabled hidden>Choose category</option>\r\n                                {categories.map(category => <option key={category} value={category}>{category}</option>)}\r\n                                <option value=\"other\">Other</option>\r\n                            </select>\r\n                        </li>\r\n                        <li>\r\n                            <label>Short Description</label>\r\n                            <textarea cols=\"40\" rows=\"5\" placeholder=\"Enter Job Snippet...\" onChange={(e) => setJobSnippet(e.target.value)}></textarea>\r\n                        </li>\r\n                        <li>\r\n                            <label>Job Description</label>\r\n                            <textarea cols=\"50\" rows=\"10\" placeholder=\"Enter Job Description...\" onChange={(e) => setJobDescription(e.target.value)}></textarea>\r\n                        </li>\r\n                    </ul>\r\n                </StyledJobInfo>\r\n                <StyledCompanyInfo>\r\n                    <h3><span>Company Info</span></h3>\r\n                    <ul>\r\n                        <li>\r\n                            <label>Company Name</label>\r\n                            <input type=\"text\" placeholder=\"Company Name...\" onChange={(e) => setCompanyName(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <label>About Company</label>\r\n                            <textarea cols=\"50\" rows=\"10\" placeholder=\"Enter Company Info...\" onChange={(e) => setCompanyInfo(e.target.value)}></textarea>\r\n                        </li>\r\n                        <li>\r\n                            <label>Location</label>\r\n                            <input type=\"text\" placeholder=\"Location...\" onChange={(e) => setLocation(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <label>Number of employees</label>\r\n                            <input type=\"number\" placeholder=\"Number of employees...\" onChange={(e) => setEmployeesNumber(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <label>Phone Number</label>\r\n                            <input type=\"text\" placeholder=\"Phone Number...\" onChange={(e) => setPhone(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <label>Email Address</label>\r\n                            <input type=\"text\" placeholder=\"Email Address...\" onChange={(e) => setEmail(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <label>Official Site</label>\r\n                            <input type=\"text\" placeholder=\"Official site...\" onChange={(e) => setUrl(e.target.value)} />\r\n                        </li>\r\n                    </ul>\r\n                </StyledCompanyInfo>\r\n                <StyledErrorMsg>\r\n                    {errorMessage}\r\n                </StyledErrorMsg>\r\n                <StyledSuccessMsg>\r\n                    {successMessage}\r\n                </StyledSuccessMsg>\r\n                <StyledButton>\r\n                    <input type=\"submit\" value=\"Save\" />\r\n                </StyledButton>\r\n            </StyledForm>\r\n        </StyledCreateJob>\r\n    )\r\n        :\r\n        <Redirect to='/login' />\r\n}\r\n\r\nexport default CreateJob\r\n","import { useState } from 'react';\r\n\r\nexport const usePostJob = () => {\r\n    const [jobTitle, setJobTitle] = useState('');\r\n    const [jobLocation, setJobLocation] = useState('');\r\n    const [seniority, setSeniority] = useState('');\r\n    const [jobCategory, setJobCategory] = useState('');\r\n    const [jobSnippet, setJobSnippet] = useState('');\r\n    const [jobDescription, setJobDescription] = useState('');\r\n    const [companyName, setCompanyName] = useState('');\r\n    const [companyInfo, setCompanyInfo] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [employeesNumber, setEmployeesNumber] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [url, setUrl] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    return [jobTitle, setJobTitle, jobLocation, setJobLocation, seniority, setSeniority, jobCategory, setJobCategory, jobSnippet, setJobSnippet, jobDescription, setJobDescription, companyName, setCompanyName, companyInfo, setCompanyInfo, location, setLocation, employeesNumber, setEmployeesNumber, phone, setPhone, email, setEmail, url, setUrl, errorMessage, setErrorMessage, successMessage, setSuccessMessage];\r\n}\r\n","import { Route } from 'react-router';\r\n\r\nconst PublicRoute = ({ path, exact, Component }) => {\r\n    return (\r\n        <Route exact={exact} path={path}>\r\n            <Component />\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default PublicRoute","import { Route } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ path, exact, Component, user }) => {\r\n    return user ? (\r\n        <Route exact={exact} path={path}>\r\n            <Component />\r\n        </Route>\r\n    ) :\r\n        <Redirect to='/login' />\r\n}\r\n\r\nexport default PrivateRoute\r\n","import { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { getJobs } from './service';\nimport Navbar from './components/navbar/Navbar';\nimport JobList from './components/jobList/JobList';\nimport JobInfo from './components/jobInfo/JobInfo';\nimport Home from './components/home/Home';\nimport Login from './components/login/Login';\nimport Register from './components/registration/register/Register';\nimport Footer from './components/Footer/Footer';\nimport CompanyInfo from './components/companyInfo/CompanyInfo';\nimport GlobalStyle from './components/GlobalStyle';\nimport CreateJob from './components/createJob/CreateJob';\nimport PublicRoute from './components/Route/PublicRoute';\nimport PrivateRoute from './components/Route/PrivateRoute';\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n  const [jobs, setJobs] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n    getJobs().then(res => {\n      if(mounted) {\n        setJobs(res.data);\n      }\n    })\n    return () => mounted = false\n  }, []);\n\n  return (\n    <Router>\n      <GlobalStyle />\n      <Navbar user={user} setUser={setUser} />\n      <Switch>\n        <PublicRoute exact path='/login' Component={() => <Login setUser={setUser} />} />\n        <PublicRoute exacte path='/register' Component={Register} />\n        <PrivateRoute exact path='/jobs/:id/:details' user={user} Component={() => <CompanyInfo user={user} />} />\n        <PrivateRoute exact path='/jobs/:id' user={user} Component={() => <JobInfo user={user} />} />\n        <PrivateRoute exact path='/jobs' user={user} Component={() => <JobList jobs={jobs} user={user} setJobs={setJobs} />} />\n        <PrivateRoute exact path='/createjob' user={user} Component={() => <CreateJob user={user} jobs={jobs} setJobs={setJobs} />} />\n        <PublicRoute exact path='/' Component={() => <Home jobs={jobs} user={user} />} />\n      </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}