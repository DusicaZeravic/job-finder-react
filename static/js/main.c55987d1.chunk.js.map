{"version":3,"sources":["service.js","components/navbar/StyledNavbar.jsx","components/navbar/Navbar.jsx","components/jobItem/StyledJobItem.jsx","components/jobItem/Job.jsx","components/Filter/StyledFilter.jsx","components/Filter/Filter.jsx","components/jobList/StyledJobList.jsx","components/jobList/JobList.jsx","components/jobInfo/StyledJobInfo.jsx","components/jobInfo/JobInfo.jsx","components/home/StyledHome.jsx","components/home/Home.jsx","components/login/StyledLogin.jsx","components/login/Login.jsx","components/registration/backRegister/StyledRegisterBack.jsx","components/registration/backRegister/BackRegister.jsx","components/registration/frontRegister/StyledRegisterFront.jsx","components/registration/frontRegister/FrontRegister.jsx","components/hooks/useRegister.jsx","components/hooks/useRegisterError.jsx","components/registration/registerCard/StyledCard.jsx","components/registration/registerCard/RegisterCard.jsx","components/registration/register/StyledRegister.jsx","components/registration/register/Register.jsx","components/Footer/StyledFooter.jsx","components/Footer/Footer.jsx","components/companyInfo/StyledCompanyInfo.jsx","components/companyInfo/CompanyInfo.jsx","components/GlobalStyle.jsx","components/createJob/StyledCreateJob.jsx","components/createJob/CreateJob.jsx","components/hooks/usePostJob.jsx","components/Route/PublicRoute.jsx","components/Route/PrivateRoute.jsx","components/User/StyledSavedJob.jsx","components/User/SavedJob.jsx","components/User/StyledSavedJobs.jsx","components/User/SavedJobs.jsx","components/User/StyledUser.jsx","components/User/User.jsx","components/Pagination/StyledPagination.jsx","components/Pagination/Pagination.jsx","App.js","index.js"],"names":["BASE_URL","JOBS","USERS","getJobById","id","axios","get","getUsers","StyledNavbar","styled","nav","Navbar","user","setUser","history","useHistory","htmlFor","type","className","to","exact","activeClassName","role","_id","username","onClick","push","StyledJobItem","div","StyledDeleteButton","button","StyledMessage","Job","job","setJobs","savedJobs","setSavedJobs","useState","message","setMessage","title","company_info","name","location","createdAt","snippet","put","updateUser","then","console","log","setTimeout","window","confirm","delete","previous","filter","el","StyledFilter","Filter","jobs","setFilterInput","setLocation","setLevel","locationArr","Array","from","Set","map","levels","seniority","onChange","e","target","value","placeholder","defaultValue","disabled","hidden","level","StyledJobList","StyledCreateNew","JobList","allJobs","pagination","jobsPerPage","filterInput","companies","filteredOptions","toLowerCase","includes","category","length","trim","StyledJobInfo","StyledInnerDiv","JobInfo","setJob","useParams","useEffect","res","data","charAt","toUpperCase","String","slice","job_description","contact","StyledHome","StyledDiv","StyledCurrent","StyledPrevious","StyledNext","Home","current","setCurrent","Math","floor","StyledLogin","StyledLoginForm","StyledLogo","Login","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","onSubmit","preventDefault","find","isValid","StyledRegisterBack","BackRegister","StyledRegisterFront","FrontRegister","rotate","firstName","setFirstName","lastName","setLastName","useRegister","confirmedPassword","setConfirmedPassword","firstNameError","setFirstNameError","lastNameError","setLastNameError","confirmedPasswordError","setConfirmedPasswordError","useRegisterError","uniqueError","setUniqueError","validateEmail","match","validatePassword","arr","newUser","max","confirm_password","some","post","StyledCard","RegisterCard","Front","Back","isFront","setIsFront","classRotate","setClassRotate","StyledRegister","Register","front","setFront","StyledFooter","footer","Footer","StyledCompanyInfo","StyledLeft","StyledRight","CompanyInfo","general_info","number_of_employees","link","href","GlobalStyle","createGlobalStyle","StyledCreateJob","StyledForm","form","StyledErrorMsg","StyledSuccessMsg","StyledButton","CreateJob","jobTitle","setJobTitle","jobLocation","setJobLocation","setSeniority","jobCategory","setJobCategory","jobSnippet","setJobSnippet","jobDescription","setJobDescription","companyName","setCompanyName","companyInfo","setCompanyInfo","employeesNumber","setEmployeesNumber","phone","setPhone","url","setUrl","errorMessage","setErrorMessage","usePostJob","successMessage","setSuccessMessage","categories","getDate","date","Date","day","Intl","DateTimeFormat","format","month","year","newJob","prev","cols","rows","PublicRoute","path","Component","PrivateRoute","StyledSavedJob","StyledDate","StyledContent","SavedJob","StyledSavedJobs","SavedJobs","StyledUser","StyledUserInfo","User","saved","setSaved","src","alt","width","StyledPagination","StyledButtons","Pagination","totalJobs","paginate","showPreviousPage","showNextPage","pageNumbers","i","ceil","number","App","currentPage","setCurrentPage","mounted","indexOfLastJob","indexOfFirstJob","currentJobs","pageNumber","exacte","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c55987d1.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://app-job-finder.herokuapp.com';\r\nconst JOBS = '/jobs';\r\nconst USERS = '/users';\r\n\r\nexport const getJobs = () => axios.get(`${BASE_URL}${JOBS}`);\r\n\r\nexport const getJobById = (id) => axios.get(`${BASE_URL}${JOBS}/${id}`);\r\n\r\nexport const postJob = (job) => axios.post(`${BASE_URL}${JOBS}`, job);\r\n\r\nexport const deleteJobById = (id) => axios.delete(`${BASE_URL}${JOBS}/${id}`);\r\n\r\nexport const getUsers = () => axios.get(`${BASE_URL}${USERS}`);\r\n\r\nexport const postUser = (user) => axios.post(`${BASE_URL}${USERS}`, user);\r\n\r\nexport const updateUser = (id, user) => axios.put(`${BASE_URL}${USERS}/${id}`, user);\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledNavbar = styled.nav`\r\n    width: 100%;\r\n    height: 10vh;\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 999;\r\n    font-size: 15px;\r\n    background-color: #fffa65;\r\n        label,\r\n        #hamburger {\r\n            display: none;\r\n        }\r\n    \r\n    .items {\r\n        display: flex;\r\n        a {\r\n            width: 25%;\r\n            padding: 28px;\r\n            font-size: 15px;\r\n            text-decoration: none;\r\n            text-align: center;\r\n            text-transform: uppercase;\r\n            font-weight: bold;\r\n            color: #4b4b4b;\r\n            &:hover {\r\n                background-color: #fff200;\r\n            }\r\n        }\r\n\r\n        .active {\r\n            background-color: #fff200;\r\n        }\r\n\r\n        .logged-user {\r\n        width: 45%;\r\n        padding: 15px;\r\n        display: flex; \r\n        justify-content: space-around;\r\n        \r\n        span,\r\n        .username {\r\n            background-color: rgba(255, 242, 0, 0.8);\r\n            padding: 10px 20px;\r\n            color: #4b4b4b;\r\n            font-size: 17px;\r\n            font-weight: normal;\r\n            letter-spacing: 1px;\r\n            border-radius: 5px;\r\n           \r\n        }\r\n\r\n        button {\r\n            background-color: rgba(75, 75, 75, 0.6);\r\n            color: #fafafa;\r\n            padding: 0.6rem 2rem;\r\n            border: none;\r\n            outline: none;\r\n            border-radius: 5px;\r\n            font-size: 17px;\r\n            letter-spacing: 1px;\r\n            cursor: pointer;\r\n            transition: all 0.5s;\r\n            position: relative;\r\n            &::after {\r\n                content: \"\\f2f5\";\r\n                font-family: \"Font Awesome 5 Free\";\r\n                font-weight: 700;\r\n                position: absolute;\r\n                left: 80%;\r\n                top: 50%;\r\n                right: 0;\r\n                bottom: 0;\r\n                opacity: 0;\r\n                transform: translate(-50%, -50%);\r\n            }\r\n            &:hover {\r\n                background-color: rgba(75, 75, 75, 0.9);\r\n                transition: all 0.5s;\r\n                border-radius: 10px;\r\n                padding: 0.6rem 3rem 0.6rem 1.5rem;\r\n                color: #ffffff;\r\n                    &::after {\r\n                        opacity: 1;\r\n                        transition: 0.5s;\r\n                        color: #fff;\r\n                    }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n    @media (max-width: 768px) {\r\n        label {\r\n            display: inline-block;\r\n            color: #4b4b4b;\r\n            background-color: #fff200;\r\n            font-size: 25px;\r\n            font-weight: bold;\r\n            padding: 16px;\r\n        }\r\n\r\n        input:checked ~ .items {\r\n            display: block;\r\n        }\r\n\r\n        .items {\r\n            display: none;\r\n        }\r\n\r\n        .items a:not(.username) {\r\n            display: block;\r\n            width: 100%;\r\n            border-top: 1px solid #fff200;\r\n            background-color: rgba(255, 250, 101, 1);\r\n            padding: 20px;\r\n            &:hover {\r\n                background-color: #fff200;\r\n            }\r\n        }\r\n        .items {\r\n            .logged-user {\r\n                display: block;\r\n                width: 100%;\r\n                border-top: 1px solid #fff200;\r\n                background-color: rgba(255, 250, 101, 1);\r\n                text-align: center;\r\n                padding: 10px;\r\n                &:hover {\r\n                    background-color: #fff200;\r\n                    span,\r\n                    .username {\r\n                        background-color: #fffa65;\r\n                    }\r\n                }\r\n                span {\r\n                    margin-right: 50px;\r\n                }\r\n        }\r\n        }\r\n        \r\n    }\r\n`\r\n\r\n\r\n","import { useHistory, NavLink, Link } from 'react-router-dom';\r\nimport { StyledNavbar } from './StyledNavbar';\r\n\r\nconst Navbar = ({ user, setUser }) => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <StyledNavbar>\r\n            <label htmlFor=\"hamburger\">&#9776;</label>\r\n            <input type=\"checkbox\" id=\"hamburger\" />\r\n\r\n            <div className=\"items\">\r\n                <NavLink to=\"/\" exact activeClassName=\"active\">Home</NavLink>\r\n                <NavLink to=\"/jobs\" exact activeClassName=\"active\">Job List</NavLink>\r\n                {\r\n                    user ?\r\n                        <div className='logged-user'>\r\n                            {\r\n                                user.role !== 'admin' ? <span><Link className=\"username\" to={`/user/${user._id}`}>{user.username}</Link></span> : <span>{user.username}</span>\r\n                            }\r\n                            <button onClick={() => {\r\n                                setUser(null);\r\n                                history.push('/');\r\n                            }\r\n                            }>Logout</button>\r\n\r\n                        </div> :\r\n                        <>\r\n                            <NavLink className=\"push-right\" to=\"/login\" exact activeClassName=\"active\">Login</NavLink>\r\n                            <NavLink className=\"push-right\" to=\"/register\" exact activeClassName=\"active\">Registration</NavLink>\r\n                        </>\r\n                }\r\n            </div>\r\n\r\n        </StyledNavbar>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledJobItem = styled.div`\r\n    position: relative;\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    box-shadow: 1px 5px 12px 0px rgba(0,0,0,0.4);\r\n    margin-bottom: 30px;\r\n    padding: 10px 20px;\r\n    &:last-child {\r\n        margin-bottom: 100px;\r\n    }\r\n    &:hover .text {\r\n         opacity: 0.4;\r\n         filter: blur(2px);\r\n    }\r\n    &:hover .overlay {\r\n        opacity: 1;   \r\n    }\r\n\r\n    .text {\r\n        opacity: 1;\r\n        display: block;\r\n        width: 100%;\r\n        height: auto;\r\n        transition: 0.5s ease;\r\n        backface-visibility: hidden;\r\n        h3 {\r\n       color: #3d3d3d;\r\n    }\r\n    a {\r\n        text-decoration: none;\r\n        color: #3d3d3d;\r\n        &:hover {\r\n            text-decoration: underline;\r\n        }\r\n    }\r\n    .location,\r\n    .createdAt {\r\n        width: 100px;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-around;\r\n\r\n        i {\r\n            color: #fff200;\r\n            font-size: 25px;\r\n            margin-top: 10px; \r\n        }\r\n    }\r\n    .createdAt {\r\n        width: 125px;\r\n            i {\r\n                color: rgba(75, 75, 75, 0.8);\r\n                font-size: 25px;\r\n        }\r\n    }\r\n    }\r\n    \r\n    .overlay {\r\n        width: 100%;\r\n        transition: 0.5s ease;\r\n        opacity: 0;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        .buttons {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            button {\r\n                width: 70px;\r\n                height: 70px;\r\n                border-radius: 50%;\r\n                margin-right: 40px;\r\n                border: none;\r\n                outline: none;\r\n                background: rgba(75, 75, 75, 0.7);\r\n                i {\r\n                    font-size: 30px;\r\n                    transition: transform 1s;\r\n                    color: rgba(255, 242, 0, 1);\r\n                    cursor: pointer;\r\n                }\r\n                &:hover {\r\n                    transform: scale(1.1);\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n    @media (max-width: 500px) {\r\n        .buttons {\r\n            button {\r\n                width: 50px;\r\n                height: 50px;\r\n                margin-left: 30px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        .buttons {\r\n            display: flex;\r\n            flex-direction: column;\r\n            button {\r\n                margin-bottom: 40px;\r\n            }\r\n            &:last-child {\r\n                margin-top: 40px;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const StyledDeleteButton = styled.button`\r\n    margin-left: 15px;\r\n    border: none;\r\n    outline: none;\r\n    padding: 10px 20px;\r\n    font-size: 15px;\r\n    border-radius: 5px;\r\n    color: #4b4b4b;\r\n    background-color: rgba(167, 14, 14, 0.4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: rgba(167, 14, 14, 0.6);\r\n    }\r\n`\r\n\r\nexport const StyledMessage = styled.div`\r\n    text-align: center;\r\n    font-weight: 600;\r\n    font-size: 20px;\r\n    padding: 5px 10px;\r\n    color: #2a832a;\r\n@media (max-width: 500px) {\r\n    font-size: 18px;\r\n}\r\n`","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteJobById, updateUser } from '../../service';\r\nimport { StyledJobItem, StyledDeleteButton, StyledMessage } from './StyledJobItem';\r\n\r\nconst Job = ({ job, setJobs, user, savedJobs, setSavedJobs }) => {\r\n    const [message, setMessage] = useState('');\r\n    return (\r\n        <StyledJobItem>\r\n            <StyledMessage className=\"savedMessage\">{message}</StyledMessage>\r\n            <div className=\"text\">\r\n                <h3>{job.title}</h3>\r\n                <Link to={`/jobs/${job._id}/${job.company_info.name}`}>{job.company_info.name}</Link>\r\n                <div className=\"location\"><i className=\"fas fa-map-marker-alt\"></i><p>{job.location}</p></div>\r\n                <div className=\"createdAt\"><i className=\"fas fa-clock\"></i><p>{job.createdAt}</p></div>\r\n                <p>{job.snippet}</p>\r\n            </div>\r\n            <div className=\"overlay\">\r\n                <div className=\"buttons\">\r\n                    <Link to={`/jobs/${job._id}`}><button><i className=\"fas fa-eye\"></i></button></Link>\r\n                    {user.role !== 'admin' ? <button onClick={() => {\r\n                        user.savedJobs = [...user.savedJobs, job._id];\r\n                        updateUser(user._id, user).then(() => {\r\n                            console.log('updated!');\r\n                            user = { ...user, savedJobs };\r\n                            setMessage('Successfully saved on your profile!');\r\n                            setTimeout(() => {\r\n                                setMessage('');\r\n                            }, 2000);\r\n                        })\r\n                    }}><i className=\"fas fa-heart\"></i></button> : ''}\r\n                    {user.role === 'admin' ? <StyledDeleteButton onClick={() => {\r\n                        if (window.confirm('Are you sure you want to delete this record?')) {\r\n                            deleteJobById(job._id).then(() => {\r\n                                setJobs(previous => previous.filter(el => el.id !== job._id));\r\n                            })\r\n                        }\r\n                    }}><i className=\"fas fa-trash-alt\"></i></StyledDeleteButton> : ''}\r\n                </div>\r\n            </div>\r\n        </StyledJobItem>\r\n    )\r\n}\r\n\r\nexport default Job\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledFilter = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-bottom: 100px;\r\n    width: 80%;\r\n    padding: 25px;\r\n    margin: 0 auto 80px auto;\r\n    background-color: rgba(75, 75, 75, 0.8);\r\n    border-radius: 2px;\r\n\r\n    select, \r\n    input {\r\n        flex: 1 1 auto;\r\n        margin: 5px;\r\n        height: 50px;\r\n        border: none;\r\n        outline: none;\r\n        border-radius: 5px;\r\n        font-size: 17px;\r\n        color: #4b4b4b;\r\n        background-color: #fafafa;\r\n        text-indent: 5px;\r\n        &:focus {\r\n            box-shadow: 1px 5px 10px 0px #9e9e9e;\r\n        }\r\n        option {\r\n            &:checked {\r\n                font-weight: bold;\r\n                background-color: rgba(75, 75, 75, 0.1)\r\n            }\r\n        }\r\n    }\r\n`\r\n","import { StyledFilter } from \"./StyledFilter\";\r\n\r\nconst Filter = ({ jobs, setFilterInput, setLocation, setLevel }) => {\r\n    let locationArr = Array.from(new Set(jobs.map(job => job.location)));\r\n    let levels = Array.from(new Set(jobs.map(job => job.seniority)));\r\n\r\n    return (\r\n        <StyledFilter>\r\n            <input type=\"text\" onChange={(e) => setFilterInput(e.target.value)} placeholder=\"Enter job title or category....\" />\r\n\r\n            <select defaultValue={'default'} onChange={(e) => setLocation(e.target.value)}>\r\n                <option value=\"default\" disabled hidden>Choose Location</option>\r\n                {locationArr.map(location => <option key={location} value={location}>{location}</option>)}\r\n            </select>\r\n\r\n            <select defaultValue={'default'} onChange={(e) => setLevel(e.target.value)}>\r\n                <option value=\"default\" disabled hidden>Choose Level of Experience</option>\r\n                {levels.map(level => <option key={level} value={level}>{level}</option>)}\r\n            </select>\r\n        </StyledFilter>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledJobList = styled.div`\r\n    width: 100%;\r\n    min-height: 85vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 100px auto 30px auto;\r\n    color: #4b4b4b;\r\n\r\n    .current-state {\r\n        text-align: center;\r\n        font-size: 30px;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .empty-filter {\r\n        margin: 0 auto;\r\n        padding: 8px 120px;\r\n        border-radius: 30px;\r\n        background-color: rgba(255, 250, 101, 0.5);\r\n        font-weight: bold;\r\n        letter-spacing: 1px;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        margin: 100px 0 10px 0;\r\n        .current-state {\r\n            font-size: 25px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n        .current-state {\r\n            font-size: 20px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 440px) {\r\n        .empty-filter {\r\n            padding: 10px;\r\n            text-align: center;\r\n            font-size: 15px;\r\n            margin: 20px 0 100px 0;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        .current-state {\r\n            font-size: 12px;\r\n        }\r\n\r\n        .empty-filter {\r\n            padding: 5px 40px;\r\n        }\r\n    }\r\n`\r\n\r\nexport const StyledCreateNew = styled.div`\r\n    width: 90%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-bottom: 40px;\r\n\r\n    button {\r\n        cursor: pointer;\r\n        padding: 10px 50px;\r\n        border: none;\r\n        outline: none;\r\n        font-size: 17px;\r\n        font-weight: bold;\r\n        background-color: #fffa65;\r\n        color: #4b4b4b;\r\n        border-radius: 2px;\r\n        box-shadow: 0.3em 0.3em 0 0 #fff200, inset 0.3em 0.3em 0 0 #fff200;\r\n        &:before {\r\n            content: '+';\r\n            padding-right: 20px;\r\n            font-size: 18px;\r\n        }\r\n        &:hover,\r\n        &:focus {\r\n            box-shadow: 0 0 0 #fff200, inset 6em 3.5em 0 0 #fff200;\r\n            color: #4b4b4b;\r\n        } \r\n        &:hover {\r\n            background-color: #fffa65;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        button {\r\n            padding: 10px 30px;\r\n            font-size: 15px;\r\n        }\r\n    }\r\n`\r\n","import { useState } from 'react';\r\nimport Job from '../jobItem/Job';\r\nimport Filter from '../Filter/Filter';\r\nimport { StyledCreateNew, StyledJobList } from './StyledJobList';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n\r\nconst JobList = ({ allJobs, jobs, user, setJobs, savedJobs, setSavedJobs, pagination, jobsPerPage }) => {\r\n    const [filterInput, setFilterInput] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [level, setLevel] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    let companies = Array.from(new Set(allJobs.map(job => job.company_info.name)));\r\n\r\n    let filteredOptions = allJobs.filter(job =>\r\n        (job.title.toLowerCase().includes(filterInput.toLowerCase()) ||\r\n            job.category.toLowerCase().includes(filterInput.toLowerCase())) &&\r\n        job.location === location &&\r\n        job.seniority === level);\r\n\r\n    return user ? (\r\n        <StyledJobList>\r\n            <div className=\"current-state\">\r\n                <p>Currently {allJobs.length} open work positions at {companies.length} companies.</p>\r\n            </div>\r\n            <Filter jobs={allJobs} setFilterInput={setFilterInput} setLocation={setLocation} setLevel={setLevel} />\r\n            {user.role === 'admin' ? <StyledCreateNew><button onClick={() => history.push('/createjob')}>Create New</button></StyledCreateNew> : ''}\r\n            {filterInput.trim() !== '' && location !== '' && level !== '' ?\r\n                filteredOptions.map(job => <Job key={job._id} job={job} setJobs={setJobs} user={user} savedJobs={savedJobs} setSavedJobs={setSavedJobs} />).length > 0 ?\r\n                    filteredOptions.map(job => <Job key={job._id} job={job} setJobs={setJobs} user={user} savedJobs={savedJobs} setSavedJobs={setSavedJobs} />)\r\n                    :\r\n                    <div className=\"empty-filter\"><p>There's no result for this search!</p></div>\r\n                :\r\n                jobs.map(job => <Job key={job._id} job={job} setJobs={setJobs} user={user} savedJobs={savedJobs} setSavedJobs={setSavedJobs} />)\r\n            }\r\n            {jobs.length > 0 || filteredOptions.length >=5 ? pagination : ''}\r\n        </StyledJobList>\r\n    )\r\n        :\r\n        <Redirect to='/login' />\r\n}\r\n\r\nexport default JobList\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledJobInfo = styled.div`\r\n    width: 100%;\r\n    min-height: 85vh;\r\n    display: flex; \r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    &::after {\r\n        content: ' ';\r\n        border-top: 85vh solid transparent;\r\n        border-right: 100vW solid #fffa65;\r\n        width: 0;\r\n        position: absolute;\r\n        z-index: -1;\r\n    } \r\n`\r\n\r\nexport const StyledInnerDiv = styled.div`\r\n    width: 80%;\r\n    color: #4b4b4b;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    animation: slide 2s;\r\n\r\n    h1 {\r\n        text-transform: uppercase;\r\n        letter-spacing: 2px;\r\n        text-shadow: 7px 7px 14px rgba(150, 150, 150, 0.83);    \r\n    }\r\n\r\n    a {\r\n        color: #3d3d3d;\r\n        &:hover {\r\n            text-decoration: underline;\r\n            color: #0d0d79;\r\n        }\r\n        &:active {\r\n            color: #0d0daf;\r\n        }\r\n\r\n    }\r\n\r\n    h4 span {\r\n        background: #4b4b4b;\r\n        color: #fafafa;\r\n        padding: 10px 30px;\r\n        margin-left: 10px;\r\n        border-radius: 2px;\r\n        opacity: 0.85;\r\n    }\r\n\r\n    p {\r\n        text-indent: 100px;\r\n        line-height: 30px;\r\n    }\r\n\r\n    p span {\r\n        padding: 10px 20px;\r\n        border-radius: 2px;\r\n        margin: 0 20px;\r\n        opacity: 0.85;\r\n    }\r\n\r\n    p span:first-child {\r\n        background: #fafafa;\r\n    }\r\n\r\n    p span:last-child {\r\n        background: #4b4b4b;\r\n        color: #fafafa;\r\n    }\r\n\r\n    @keyframes slide {\r\n    from {\r\n        opacity: 0;\r\n        transform: translateY(150px);\r\n    }\r\n    to {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n    }\r\n}\r\n\r\n    @media (max-width: 768px) {\r\n        h1 {\r\n            font-size: 22px;\r\n        }\r\n\r\n        p {\r\n            font-size: 13px;\r\n        }\r\n\r\n        p:last-child {\r\n            text-indent: 10px;\r\n            span {\r\n                padding: 1px 30px;\r\n                display: block;\r\n                text-align: center;\r\n                margin-bottom: 5px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n        h1 {\r\n            font-size: 15px;\r\n        } \r\n        h3, h4 {\r\n            font-size: 14px;\r\n        }\r\n        p {\r\n            line-height: 25px;\r\n            text-indent: 60px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 440px) {\r\n        h1 {\r\n            font-size: 12px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        margin: 30px 0;\r\n    }\r\n`","import { useState, useEffect } from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { getJobById } from '../../service';\r\nimport { StyledInnerDiv, StyledJobInfo } from './StyledJobInfo';\r\n\r\nconst JobInfo = ({ user }) => {\r\n    const [job, setJob] = useState(null);\r\n\r\n    let { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getJobById(id).then(res => {\r\n            setJob(res.data);\r\n        })\r\n    }, []);\r\n\r\n    return user ? (\r\n        <>\r\n            <StyledJobInfo>\r\n                <StyledInnerDiv>\r\n                    <h1>{job?.title}</h1>\r\n                    <h3><Link to={`/jobs/${job?._id}/${job?.company_info.name}`}>{job?.company_info.name}</Link>, {job?.location}</h3>\r\n                    <h4>Level of experience : <span>{job?.seniority.charAt(0).toUpperCase() + String(job?.seniority.slice(1))}</span></h4>\r\n                    <p>{job?.job_description}</p>\r\n                    <p>If you are interested in this position you can contact us: <span>{job?.company_info.contact[0]}</span><span>{job?.company_info.contact[1]}</span></p>\r\n                </StyledInnerDiv>\r\n            </StyledJobInfo>\r\n        </>\r\n    )\r\n        :\r\n        <Redirect to='/login' />\r\n}\r\n\r\nexport default JobInfo\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledHome = styled.div`\r\n    width: 100%;\r\n    min-height: 85vh;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    background-image: url('/job-finder-react/background.jpg');\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    opacity: 0.85;\r\n\r\n    h1 {\r\n        text-transform: uppercase;\r\n        color: #4b4b4b;\r\n        font-size: 40px;\r\n        letter-spacing: 5px;\r\n        text-shadow: 7px 7px 14px rgba(150, 150, 150, 0.83);\r\n        overflow: hidden;\r\n        border-right: .10em solid #4b4b4b;\r\n        white-space: nowrap;\r\n        margin: 100px auto 20px auto;\r\n        letter-spacing: .15em;\r\n        animation: typing 3.5s steps(40, end),\r\n                   blink-caret .75s step-end infinite; \r\n    }\r\n\r\n    @keyframes typing {\r\n        from {width: 0}\r\n        to { width: 40%}\r\n    }\r\n\r\n    @keyframes blink-caret {\r\n        from, to {border-color: transparent}\r\n        40% {border-color: #4b4b4b}\r\n    }\r\n\r\n    a {\r\n        color: #4b4b4b;\r\n        text-decoration: none;\r\n        margin-top: -50px;\r\n        font-size: 18px;\r\n        &:hover {\r\n            text-decoration: underline;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        height: 90vh;\r\n        background-size: 100% 100%;\r\n        h1 {\r\n            font-size: 35px;\r\n        }\r\n        a {\r\n            font-size: 15px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 440px) {\r\n        h1 {\r\n            font-size: 27px;\r\n        }\r\n    }\r\n\r\n   @media (max-width: 360px) {\r\n       width: 100%;\r\n       h1 {\r\n           font-size: 22px;\r\n       }\r\n       a {\r\n           font-size: 13px;\r\n       }\r\n   }\r\n`\r\n\r\nexport const StyledDiv = styled.div`\r\n    width: 70%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    @media (max-width: 768px) {\r\n        width: 75%;\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        width: 85%;\r\n    }\r\n`\r\n\r\nexport const StyledCurrent = styled.div`\r\n        width: 80%;\r\n        height: 40vh;\r\n        margin: 60px auto;\r\n        border: 3px solid #4b4b4b;\r\n        box-shadow: 1px 5px 16px 2px #d6cb2e;\r\n        padding: 10px 20px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 23px;\r\n        border-radius: 2% 6% 5% 4% / 1% 1% 2% 4%;\r\n        letter-spacing: 1px;\r\n        text-align: center;\r\n        position: relative;\r\n            &::before {\r\n                content: '';\r\n                border: 2px solid #fff200;\r\n                display: block;\r\n                width: 100%;\r\n                height: 100%;\r\n                position: absolute;\r\n                border-radius: 1% 1% 2% 4% / 2% 6% 5% 4%;\r\n            }\r\n\r\n        @media (max-width: 768px) {\r\n            font-size: 17px;\r\n        }\r\n        `\r\n\r\nexport const StyledPrevious = styled.div`\r\n    font-size: 40px;\r\n    color: #4b4b4b;\r\n    text-shadow: 7px 7px 14px rgba(150, 150, 150, 0.83);\r\n    opacity: 0.85;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 360px) {\r\n        font-size: 30px;\r\n    }\r\n`\r\n\r\nexport const StyledNext = styled.div`\r\n    font-size: 40px;\r\n    color: #4b4b4b;\r\n    text-shadow: 7px 7px 14px rgba(150, 150, 150, 0.83);\r\n    opacity: 0.85;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 360px) {\r\n        font-size: 30px;\r\n    }\r\n`","import { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { StyledHome, StyledDiv, StyledCurrent, StyledPrevious, StyledNext } from \"./StyledHome\"\r\n\r\nconst Home = ({ jobs, user }) => {\r\n    const [current, setCurrent] = useState(0);\r\n\r\n    const nextJob = () => jobs.length - 1 === current ? setCurrent(0) : setCurrent(current + 1);\r\n    const previousJob = () => current === 0 ? setCurrent(Math.floor((jobs.length / 2)) - 1) : setCurrent(current - 1);\r\n\r\n    return (\r\n        <StyledHome>\r\n            <h1>Find Your Dream Job</h1>\r\n            <StyledDiv>\r\n                <StyledPrevious onClick={previousJob}>\r\n                    <i className=\"fas fa-chevron-left\"></i>\r\n                </StyledPrevious>\r\n                <StyledCurrent>\r\n                    <p>&#10032; {jobs[current]?.title} &#10032;</p>\r\n                    <p>{jobs[current]?.company_info.name}</p>\r\n                </StyledCurrent>\r\n                <StyledNext onClick={nextJob}>\r\n                    <i className=\"fas fa-chevron-right\"></i>\r\n                </StyledNext>\r\n            </StyledDiv>\r\n            {user ?\r\n                <Link to='/jobs'>You want to see more about these jobs? Click here!</Link>\r\n                :\r\n                <Link to='/login'>You want to see more about these jobs? Click here!</Link>}\r\n        </StyledHome>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledLogin = styled.div`\r\n    width: 100%;\r\n    min-height: 85vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    &::after {\r\n        content: '';\r\n        background-image: url('/job-finder-react/background1.jpg');\r\n        background-position: center;\r\n        background-size: cover;\r\n        background-repeat: no-repeat;\r\n        opacity: 0.3;\r\n        top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  position: absolute;\r\n  z-index: -1;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        &::after {\r\n            background-size: 100% 100%;\r\n        }\r\n    }\r\n`\r\n\r\nexport const StyledLoginForm = styled.div`\r\n    width: 400px;\r\n    height: 600px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #4b4b4b;        \r\n    box-shadow: 1px 5px 12px 0px rgba(0,0,0,0.4);\r\n\r\n    h2 {\r\n        text-transform: uppercase;\r\n        letter-spacing: 1px;\r\n    }\r\n\r\n    form {\r\n        width: 100%;\r\n        margin-top: 30px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    form input {\r\n        font-size: 15px;\r\n        padding: 10px 20px 10px 5px;\r\n        border: none;\r\n        outline: none;\r\n        margin-top: 20px;\r\n        width: 350px;\r\n        border-radius: 2px;\r\n        text-indent: 25px\r\n    }\r\n\r\n    input:focus:not(input[type=\"submit\"]) {\r\n        box-shadow: 0 0 0 2px rgba(216, 219, 33, 0.4);\r\n    }\r\n\r\n    input[type=\"submit\"] {\r\n        cursor: pointer;\r\n        background-color: #4b4b4b;\r\n        opacity: 0.85;\r\n        color: #fafafa;\r\n        text-transform: uppercase;\r\n        letter-spacing: 1px;\r\n        &:hover {\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n   form div {\r\n       position: relative;\r\n   }\r\n\r\n   form div i {\r\n       position: absolute;\r\n       left: 5px;\r\n       top: 30px;\r\n       color: #4b4b4b;\r\n       font-size: 18px;\r\n   }\r\n\r\n   form a {\r\n       text-align: center;\r\n       margin-top: 50px;\r\n       text-decoration: none;\r\n       &:hover {\r\n        text-decoration: underline;\r\n       }\r\n   }\r\n\r\n   .error-msg {\r\n        font-size: 13px;\r\n        color: #e05555;\r\n        text-align: center;\r\n        font-weight: bold;\r\n   }\r\n\r\n   @media (max-width: 768px) {\r\n       min-height: 550px;\r\n       margin: 60px 0;\r\n   }\r\n\r\n   @media (max-width: 360px) {\r\n      height: 600px;\r\n      width: 330px;\r\n      h2 {\r\n          font-size: 18px;\r\n      }\r\n      form input {\r\n        width: 300px;\r\n      }\r\n   }\r\n`\r\n\r\nexport const StyledLogo = styled.div`\r\n    background-color: #fffa65;\r\n    width: 150px;\r\n    height: 150px;\r\n    margin: 0 auto;\r\n    border-radius: 50%;\r\n    margin-bottom: 10px;\r\n\r\n    i {\r\n        font-size: 70px;\r\n        line-height: 150px;\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        width: 100px;\r\n        height: 100px;\r\n        i {\r\n            font-size: 50px;\r\n            line-height: 100px;\r\n        }\r\n    }\r\n`","import { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { getUsers } from '../../service';\r\nimport { StyledLogin, StyledLoginForm, StyledLogo } from './StyledLogin';\r\n\r\nconst Login = ({ setUser }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const isValid = (user) => {\r\n        if (email.trim() !== user?.email) {\r\n            setEmailError('Incorrect email address!');\r\n        } else {\r\n            setEmailError('');\r\n        }\r\n        if (password.trim() !== user?.password) {\r\n            setPasswordError('Incorrect password!');\r\n        } else {\r\n            setPasswordError('');\r\n        }\r\n        if (email.trim() !== user?.email || password.trim() !== user?.password) {\r\n            return false\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledLogin>\r\n            <StyledLoginForm onSubmit={(e) => {\r\n                e.preventDefault();\r\n                getUsers().then(res => {\r\n                    let user = res.data.find(el => el.email === email && el.password === password);\r\n                    if (user) {\r\n                        setUser(user);\r\n                        history.push('/jobs');\r\n                    } else {\r\n                        isValid(user);\r\n                    }\r\n                })\r\n            }}>\r\n                <StyledLogo>\r\n                    <i className=\"fas fa-business-time\"></i>\r\n                </StyledLogo>\r\n                <h2>Sign in to your account</h2>\r\n                <form>\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Enter email address...\" onChange={(e) => setEmail(e.target.value)} />\r\n                        <i className=\"far fa-user\"></i>\r\n                        <p className=\"error-msg\">{emailError}</p>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"password\" placeholder=\"Enter password...\" onChange={(e) => setPassword(e.target.value)} />\r\n                        <i className=\"fas fa-unlock-alt\"></i>\r\n                        <p className=\"error-msg\">{passwordError}</p>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"submit\" value=\"Sign In\" />\r\n                    </div>\r\n                    <Link to='/register'>Don't have an account? Sign Up Here!</Link>\r\n                </form>\r\n            </StyledLoginForm>\r\n        </StyledLogin>\r\n\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledRegisterBack = styled.div`\r\n        width: 100%;\r\n        height: 500px;\r\n\r\n    div {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        box-shadow: 1px 5px 12px 0px rgba(0,0,0,0.4);\r\n        text-align: center;\r\n        color: #4b4b4b;\r\n\r\n        i {\r\n            font-size: 130px;\r\n            color: rgba(0, 128, 0, 0.4);\r\n            margin-bottom: 30px;\r\n        }\r\n\r\n        p {\r\n            width: 80%;\r\n            height: 70px;\r\n            line-height: 70px;\r\n            background-color: rgba(0, 128, 0, 0.4);\r\n            color: #fafafa;\r\n            font-size: 18px;\r\n            margin-bottom: 100px;\r\n            font-weight: bold;\r\n            border-radius: 3px;\r\n            letter-spacing: 1px;\r\n        }\r\n\r\n        a {\r\n            font-size: 20px;\r\n            color: #4b4b4b;\r\n            text-decoration: none;\r\n            text-transform: uppercase;\r\n            padding: 10px 30px;\r\n            border-radius: 2px;\r\n            background-color: rgba(255, 250, 101, 0.5);\r\n            &:hover {\r\n                background-color: rgba(255, 250, 101, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n       div p {\r\n           font-size: 15px;\r\n       }\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n        div p {\r\n            font-size: 12px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 440px) {\r\n        display: flex;\r\n        justify-content: center;\r\n        div p {\r\n            padding: 5px 2px;\r\n            line-height: 30px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        div p {\r\n            padding: 5px 1px;\r\n        }\r\n    }\r\n      \r\n`","import { Link } from 'react-router-dom';\r\nimport { StyledRegisterBack } from './StyledRegisterBack';\r\n\r\nconst BackRegister = () => {\r\n    return (\r\n        <StyledRegisterBack>\r\n            <div>\r\n                <i className=\"far fa-check-circle\"></i>\r\n                <p>You have successfully registered! &#9787;</p>\r\n                <span>Now, you're ready to </span><br></br><Link to='/login'>Login</Link>\r\n            </div>\r\n        </StyledRegisterBack>\r\n    )\r\n}\r\n\r\nexport default BackRegister;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledRegisterFront = styled.div`\r\n    width: 100%;\r\n    min-height: 85vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    form {\r\n        width: 100%;\r\n        min-height: 500px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding: 10px 30px;\r\n        box-shadow: 1px 5px 12px 0px rgba(0,0,0,0.4);\r\n        text-align: center;\r\n        color: #4b4b4b;\r\n\r\n    h2 {\r\n        text-transform: uppercase;\r\n        margin: 50px 0 20px 0;\r\n        letter-spacing: 1px;\r\n    }\r\n\r\n    ul {\r\n        list-style-type: none;\r\n        padding: 0;\r\n        max-width: 800px;\r\n        margin: 0 auto;\r\n        li {\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            align-items: center;\r\n            label {\r\n                padding: 8px;\r\n                font-weight: 300;\r\n                letter-spacing: 1px;\r\n                text-transform: uppercase;\r\n            }\r\n        }\r\n    }\r\n        ul  li  label {\r\n            flex: 1 0 120px;\r\n            margin-right: 50px\r\n        }\r\n\r\n        ul  li  label + * {\r\n            flex: 1 0 220px;\r\n        }\r\n\r\n        ul li input {\r\n            border: 2px solid #eee;\r\n            border-radius: 3px;\r\n            outline: none;\r\n            padding: 8px 20px;\r\n            &:hover:not(input[type=\"submit\"]),\r\n            &:focus-within {\r\n                background-color: #eee;\r\n\r\n            }\r\n        }\r\n\r\n        input[type=\"submit\"] {\r\n            cursor: pointer;\r\n            margin-left: auto;\r\n            text-transform: uppercase;\r\n            letter-spacing: 1px;\r\n            border-radius: 2px;\r\n            background-color: #4b4b4b;\r\n            color: #fafafa;\r\n            opacity: 0.85;\r\n            &:hover {\r\n                opacity: 1;\r\n            }\r\n        }\r\n\r\n        .error-msg,\r\n        .unique-error {\r\n            font-size: 13px;\r\n            color: #e05555;\r\n            text-align: center;\r\n            font-weight: bold;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n       form {\r\n           min-height: 500px;\r\n           h2 {\r\n               font-size: 20px;\r\n               margin: 20px 0 10px 0;\r\n           }\r\n           ul li label {\r\n               font-size: 12px;\r\n               margin: 0 auto;\r\n           }\r\n           ul li input {\r\n            padding: 5px 20px;\r\n           }\r\n           input[type=\"submit\"] {\r\n               margin-top: 40px;\r\n           }\r\n           .error-msg {\r\n               margin: 1px 0;\r\n           }\r\n       }\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n        form {\r\n            width: 150%;\r\n            h2 {\r\n                font-size: 15px;\r\n            }\r\n        }\r\n        \r\n    }\r\n`\r\n","import { useRegister } from '../../hooks/useRegister';\r\nimport { useRegisterError } from '../../hooks/useRegisterError';\r\nimport { getUsers, postUser } from '../../../service';\r\nimport { StyledRegisterFront } from './StyledRegisterFront';\r\n\r\nconst FrontRegister = ({ rotate }) => {\r\n    const [firstName, setFirstName, lastName, setLastName, email, setEmail, password, setPassword, confirmedPassword, setConfirmedPassword] = useRegister();\r\n    const [firstNameError, setFirstNameError, lastNameError, setLastNameError, emailError, setEmailError, passwordError, setPasswordError, confirmedPasswordError, setConfirmedPasswordError, uniqueError, setUniqueError] = useRegisterError();\r\n\r\n    const validateEmail = (email) => {\r\n        const emailRegEx = /\\S+@\\S+\\.\\S+/;\r\n        return email.match(emailRegEx);\r\n    }\r\n\r\n    const validatePassword = (password) => {\r\n        const passwordRegEx = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\r\n        return password.match(passwordRegEx);\r\n    }\r\n\r\n    const isValid = () => {\r\n        if (firstName.trim() === '') {\r\n            setFirstNameError('You must enter your first name!');\r\n        } else {\r\n            setFirstNameError('');\r\n        }\r\n        if (lastName.trim() === '') {\r\n            setLastNameError('You must enter your last name!');\r\n        } else {\r\n            setLastNameError('');\r\n        }\r\n        if (!validateEmail(email)) {\r\n            setEmailError('Invalid email format!')\r\n        } else {\r\n            setEmailError('');\r\n        }\r\n        if (!validatePassword(password)) {\r\n            setPasswordError('Password must have 8 characters, at least one number and at least one letter!')\r\n        } else {\r\n            setPasswordError('');\r\n        }\r\n        if (confirmedPassword !== password) {\r\n            setConfirmedPasswordError('Passwords do not match!')\r\n        } else {\r\n            setConfirmedPasswordError('');\r\n        }\r\n        if (firstName.trim() === '' || lastName.trim() === '' || !validateEmail(email) || !validatePassword(password) || confirmedPassword !== password) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const generateId = (arr) => {\r\n        const id = arr.length > 0 ? Math.max(...arr.map(user => user.id)) + 1 : 1;\r\n        return id;\r\n    }\r\n\r\n    const clearAllInputs = () => {\r\n        setFirstName('');\r\n        setLastName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmedPassword('');\r\n    }\r\n\r\n    return (\r\n        <StyledRegisterFront>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                if (!isValid()) {\r\n                    return\r\n                }\r\n                getUsers().then(res => {\r\n                    let newUser = {\r\n                        id: generateId(res.data),\r\n                        username: firstName + lastName.charAt(0),\r\n                        firstName: firstName,\r\n                        lastName: lastName,\r\n                        email: email,\r\n                        password: password,\r\n                        confirm_password: confirmedPassword\r\n                    };\r\n                    if (!res.data.some(user => user.email === email)) {\r\n                        postUser(newUser).then(() => {\r\n                            setUniqueError('');\r\n                            clearAllInputs();\r\n                            rotate();\r\n                        })\r\n                    } else {\r\n                        setUniqueError('User with that email already exist!')\r\n                    }\r\n                })\r\n            }}>\r\n                <h2>Create an Account</h2>\r\n                <p className=\"unique-error\">{uniqueError}</p>\r\n                <ul>\r\n                    <li>\r\n                        <label htmlFor=\"first_name\">First Name</label>\r\n                        <input value={firstName} type=\"text\" name=\"first_name\" id=\"first-name\" onChange={(e) => setFirstName(e.target.value)} />\r\n                    </li>\r\n                    <p className=\"error-msg\">{firstNameError}</p>\r\n                    <li>\r\n                        <label htmlFor=\"last_name\">Last Name</label>\r\n                        <input value={lastName} type=\"text\" name=\"last_name\" id=\"last-name\" onChange={(e) => setLastName(e.target.value)} />\r\n                    </li>\r\n                    <p className=\"error-msg\">{lastNameError}</p>\r\n                    <li>\r\n                        <label htmlFor=\"email\">E-mail</label>\r\n                        <input value={email} type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)} />\r\n                    </li>\r\n                    <p className=\"error-msg\">{emailError}</p>\r\n                    <li>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input value={password} type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n                    </li>\r\n                    <p className=\"error-msg\">{passwordError}</p>\r\n                    <li>\r\n                        <label htmlFor=\"confirm_password\">Confirm Password</label>\r\n                        <input value={confirmedPassword} type=\"password\" name=\"confirm_password\" id=\"confirm_password\" onChange={(e) => setConfirmedPassword(e.target.value)} />\r\n                    </li>\r\n                    <p className=\"error-msg\">{confirmedPasswordError}</p>\r\n                    <li>\r\n                        <input type=\"submit\" value=\"Sign Up\" />\r\n                    </li>\r\n                </ul>\r\n            </form>\r\n        </StyledRegisterFront>\r\n    )\r\n}\r\n\r\nexport default FrontRegister\r\n","import { useState } from 'react';\r\n\r\nexport const useRegister = () => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmedPassword, setConfirmedPassword] = useState('');\r\n\r\n    return [firstName, setFirstName, lastName, setLastName, email, setEmail, password, setPassword, confirmedPassword, setConfirmedPassword];\r\n}","import { useState } from 'react';\r\n\r\nexport const useRegisterError= () => {\r\n    const [firstNameError, setFirstNameError] = useState('');\r\n    const [lastNameError, setLastNameError] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n    const [confirmedPasswordError, setConfirmedPasswordError] = useState('');\r\n    const [uniqueError, setUniqueError] = useState('');\r\n\r\n    return [firstNameError, setFirstNameError, lastNameError, setLastNameError, emailError, setEmailError, passwordError, setPasswordError, confirmedPasswordError, setConfirmedPasswordError, uniqueError, setUniqueError];\r\n}","import styled from 'styled-components';\r\n\r\nexport const StyledCard = styled.div`\r\n        transition: transform 2s;\r\n        width: 50%;\r\n    &.rotate {\r\n        transform: rotateY(360deg);\r\n    }\r\n`","import { useState } from 'react';\r\nimport { StyledCard } from './StyledCard';\r\n\r\nconst RegisterCard = ({ Front, Back, isFront, setIsFront }) => {\r\n    const [classRotate, setClassRotate] = useState('');\r\n\r\n    const rotate = () => {\r\n            setIsFront(false);\r\n            setClassRotate('rotate');\r\n    }\r\n\r\n    return (\r\n        <StyledCard className={classRotate}>\r\n            {\r\n                isFront ? <Front rotate={rotate} /> : <Back />\r\n            }\r\n        </StyledCard>\r\n    )\r\n}\r\n\r\nexport default RegisterCard","import styled from 'styled-components';\r\n\r\nexport const StyledRegister = styled.div`\r\n    width: 100%;\r\n    height: 85vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    &::after {\r\n        content: '';\r\n        background-image: url('/job-finder-react/background1.jpg');\r\n        background-position: center;\r\n        background-size: cover;\r\n        background-repeat: no-repeat;\r\n        opacity: 0.3;\r\n        top: 0;\r\n        left: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        position: absolute;\r\n        z-index: -1;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        &::after {\r\n            background-size: 100% 100%;\r\n        }\r\n    }\r\n`\r\n","import { useState } from 'react';\r\nimport BackRegister from '../backRegister/BackRegister';\r\nimport FrontRegister from '../frontRegister/FrontRegister';\r\nimport RegisterCard from '../registerCard/RegisterCard';\r\nimport { StyledRegister } from './StyledRegister';\r\n\r\nconst Register = () => {\r\n    const [front, setFront] = useState(true);\r\n\r\n    return (\r\n        <StyledRegister>\r\n            <RegisterCard Front={FrontRegister} Back={BackRegister} isFront={front} setIsFront={setFront} />\r\n        </StyledRegister>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledFooter = styled.footer`\r\n    width: 100%;\r\n    height: 5vh;\r\n    position: absolute;\r\n    bottom: 0; \r\n    margin-top: 40px;\r\n    p {\r\n        text-align: center;\r\n        font-size: 15px;\r\n        color: #4b4b4b;\r\n        line-height: 5vh;\r\n        margin: 0;\r\n    }\r\n`","import { StyledFooter } from './StyledFooter';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <StyledFooter>\r\n            <p>&#169;2021. All right reserved. Dušica Žeravić.</p>\r\n        </StyledFooter>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledCompanyInfo = styled.div`\r\n    width: 100%;\r\n    min-height: 85vh;\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    animation: appear 2s;\r\n    \r\n    @keyframes appear {\r\n    from {\r\n        opacity: 0;\r\n    }\r\n    to {\r\n        opacity: 1;\r\n    }\r\n}\r\n`\r\n\r\nexport const StyledLeft = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex: 1 1 auto;\r\n    width: 40%;\r\n    height: 550px;\r\n    margin: 30px 30px;\r\n    background-color: #fffa65;\r\n    box-shadow: 1px 1px 6px 0px rgba(50, 50, 50, 0.48);\r\n    h2 {\r\n        font-size: 30px;\r\n        padding: 20px 40px;\r\n        position: relative;\r\n        &::after, \r\n        &::before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            bottom: 0;\r\n            right: 0;\r\n            border: 2px solid #000;\r\n            transition: transform .2s;\r\n        }\r\n        &::after {\r\n            transform: translate(3px, 3px);\r\n        }\r\n        &::before {\r\n            transform: translate(-3px, -3px)\r\n        }\r\n        &:hover::after,\r\n        &:hover::before {\r\n            transform: translate(0);\r\n        }\r\n    }\r\n\r\n    h3 {\r\n        font-size: 20px;\r\n        letter-spacing: 1px;\r\n    } \r\n\r\n    div {\r\n        display: flex;\r\n        align-items: center;\r\n        span {             \r\n            font-size: 25px;\r\n            color: #3d3d3d;             \r\n            margin-right: 20px;         \r\n        }\r\n    } \r\n\r\n    ul {\r\n        margin-left: -30px;\r\n        span {\r\n            vertical-align: middle;\r\n        }\r\n        li {\r\n            list-style-type: none;\r\n            margin-bottom: 20px;\r\n            vertical-align: middle;\r\n     }\r\n    }\r\n\r\n    a {\r\n        color: #4b4b4b;\r\n        text-decoration: none;\r\n        background-color: #3d3d3d;\r\n        opacity: 0.75;\r\n        padding: 10px 20px;\r\n        color: #fafafa;\r\n        border-radius: 2px;\r\n        &:hover {\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        margin-bottom: 60px;\r\n    }\r\n\r\n    @media (max-width: 440px) {\r\n        h2 {\r\n            font-size: 23px;\r\n            padding: 15px 10px;\r\n        }\r\n        div {\r\n            margin-left: 20px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        h2 {\r\n            font-size: 20px;\r\n            padding: 15px 10px;\r\n        }\r\n        h3 {\r\n            font-size: 18px;\r\n        }\r\n        div {\r\n            margin-left: 20px;\r\n        }\r\n        div span {\r\n            font-size: 20px;\r\n            margin: 0 10px;\r\n        }\r\n        ul li {\r\n            font-size: 15px;\r\n            margin-left: 50px;\r\n        }\r\n    }\r\n`\r\n\r\nexport const StyledRight = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    flex: 1 1 auto;\r\n    width: 50%;\r\n    height: 550px;\r\n    margin: 30px 30px 30px 30px;\r\n    background-color: #f5f5f5;\r\n    box-shadow: 1px 1px 6px 0px rgba(50, 50, 50, 0.48);\r\n    p {\r\n        padding: 20px 30px;\r\n        line-height: 40px;\r\n        word-spacing: 2px;\r\n    }\r\n\r\n    p:last-child {\r\n        font-weight: 600;\r\n    }\r\n\r\n    @media (max-width: 440px) {\r\n        p:first-child {\r\n            font-size: 13px;\r\n            padding: 10px 10px;\r\n            margin: 0;\r\n        }\r\n        p:last-child {\r\n            font-size: 14px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        p:first-child {\r\n            font-size: 12px;\r\n            padding-top: 50px;\r\n            margin: 0;\r\n        }\r\n\r\n        p:last-child {\r\n            font-size: 13px;\r\n            margin: 0;\r\n            padding: 0 0 40px 30px;\r\n        }\r\n    }\r\n`","import { useState, useEffect } from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { getJobById } from '../../service';\r\nimport { StyledCompanyInfo, StyledLeft, StyledRight } from './StyledCompanyInfo';\r\n\r\nconst CompanyInfo = ({ user }) => {\r\n    const [job, setJob] = useState(null);\r\n\r\n    let { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getJobById(id).then(res => {\r\n            setJob(res.data);\r\n        })\r\n    }, []);\r\n\r\n    return user ? (\r\n        <StyledCompanyInfo>\r\n            <StyledRight>\r\n                <p>{job?.company_info.general_info}</p>\r\n                <p>Number of employees : <span>{job?.company_info.number_of_employees}</span></p>\r\n            </StyledRight>\r\n            <StyledLeft>\r\n                <h2>{job?.company_info.name}</h2>\r\n                <h3>How can you find us?</h3>\r\n                <div><span><i className=\"fas fa-map-marker-alt\"></i></span><p>{job?.company_info.location}</p></div>\r\n                <ul>\r\n                    <div><li><span><i className=\"fas fa-phone-alt\"></i></span>{job?.company_info.contact[0]}</li></div>\r\n                    <div><li><span><i className=\"fas fa-envelope\"></i></span>{job?.company_info.contact[1]}</li></div>\r\n                </ul>\r\n                {job?.company_info.link ? <a href={job?.company_info.link} target=\"_blank\">See more</a> : ''}\r\n            </StyledLeft>\r\n        </StyledCompanyInfo>\r\n    )\r\n        :\r\n        <Redirect to='/login' />\r\n}\r\n\r\nexport default CompanyInfo\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    html {\r\n        font-family: 'Libre Franklin', sans-serif;\r\n    }\r\n\r\n    body {\r\n        margin: 0;\r\n        padding: 0;\r\n        background-color: #fafafa;\r\n    } \r\n\r\n    #root {\r\n        position: relative;\r\n        min-height: 100vh;\r\n    }\r\n`\r\n\r\nexport default GlobalStyle;","import styled from 'styled-components';\r\n\r\nexport const StyledCreateJob = styled.div`\r\n   width: 100%;\r\n   display: flex; \r\n   flex-direction: column;\r\n   justify-content: center;\r\n`\r\n\r\nexport const StyledForm = styled.form`\r\n    width: 70%;\r\n    margin: 60px auto;\r\n    box-shadow: 1px 2px 10px -2px rgba(0,0,0,0.55);\r\n    background-color: #fff;\r\n\r\n    ul {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        list-style-type: none;\r\n        li {\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            align-items: center;\r\n            margin-left: 100px;\r\n            width: 90%;\r\n            label:not(.seniority-label), \r\n            p {\r\n                width: 100%;\r\n                letter-spacing: 1px;\r\n                font-weight: 600;\r\n            }\r\n            \r\n            input:not([type=\"radio\"]), \r\n            textarea, \r\n            select {\r\n                width: 80%;\r\n                border: none;\r\n                outline: none;\r\n                background-color: #fafafa;\r\n                padding: 10px 10px;\r\n                margin: 10px 0 20px 0;\r\n                border: 2px solid #eee;;\r\n                border-radius: 2px;\r\n                &:focus {\r\n                    box-shadow: 0 0 0 2px rgba(216, 219, 33, 0.4);\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    h3 {\r\n        border-bottom: 1px solid #dadada;\r\n        margin: 20px 0  0 20px;\r\n        font-size: 25px;\r\n        font-weight: 600;\r\n        color: #fff200;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n       ul li {\r\n           margin-left: 10px;\r\n           label {\r\n               padding-bottom: 10px;\r\n           }\r\n       }\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n        width: 85%;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n        ul li {\r\n            input:not([type=\"radio\"]), \r\n            textarea, \r\n            select {\r\n                width: 350px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @media (max-width: 440px) {\r\n        width: 80%;\r\n        ul li {\r\n            input:not([type=\"radio\"]), \r\n            textarea, \r\n            select {\r\n                width: 300px;\r\n            }\r\n        }   \r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        ul li {\r\n            margin-left: 0;\r\n            label:not(.seniority-label), \r\n            p {\r\n                width: 250px;\r\n            }\r\n            input:not([type=\"radio\"]), \r\n            textarea, \r\n            select {\r\n                width: 250px;\r\n            }\r\n        } \r\n    }\r\n`\r\nexport const StyledJobInfo = styled.div`\r\n    .seniority {\r\n        margin-bottom: 20px; \r\n        input {\r\n            margin-right: 10px;\r\n            vertical-align: middle;\r\n        }\r\n        label {\r\n            margin-right: 30px;\r\n            vertical-align: middle;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 440px) {\r\n        .seniority {\r\n            width: 90px;\r\n            label {\r\n                margin-right: 30px;\r\n            }\r\n        }\r\n    }\r\n`\r\nexport const StyledCompanyInfo = styled.div`\r\n    \r\n`\r\n\r\nexport const StyledErrorMsg = styled.div`\r\n    .error-msg {\r\n        width: 60%;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        margin: 0 auto;\r\n        text-align: center;\r\n        border-radius: 2px;\r\n        color: #fafafa;\r\n        background-color: rgba(233, 30, 30, 0.5);\r\n    }\r\n`\r\n\r\nexport const StyledSuccessMsg = styled.div`\r\n    .success-msg {\r\n        width: 60%;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        margin: 0 auto;\r\n        text-align: center;\r\n        border-radius: 2px;\r\n        color: #fafafa;\r\n        background-color: rgba(33, 119, 47, 0.4);\r\n    }\r\n`\r\n\r\nexport const StyledButton = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n   input[type=\"submit\"] {\r\n            padding: 8px 60px;\r\n            margin: 20px auto;\r\n            cursor: pointer;\r\n            outline: none;\r\n            border: none;\r\n            text-transform: uppercase;\r\n            letter-spacing: 1px;\r\n            border-radius: 2px;\r\n            background-color: #4b4b4b;\r\n            color: #fafafa;\r\n            opacity: 0.85;\r\n            font-weight: 600;\r\n            &:hover {\r\n                opacity: 1;\r\n            }\r\n        }\r\n` \r\n","import { usePostJob } from '../hooks/usePostJob';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { postJob } from '../../service';\r\nimport { StyledButton, StyledCreateJob, StyledForm, StyledJobInfo, StyledCompanyInfo, StyledErrorMsg, StyledSuccessMsg } from './StyledCreateJob';\r\n\r\nconst CreateJob = ({ user, jobs, setJobs }) => {\r\n    const [jobTitle, setJobTitle, jobLocation, setJobLocation, seniority, setSeniority, jobCategory, setJobCategory, jobSnippet, setJobSnippet, jobDescription, setJobDescription, companyName, setCompanyName, companyInfo, setCompanyInfo, location, setLocation, employeesNumber, setEmployeesNumber, phone, setPhone, email, setEmail, url, setUrl, errorMessage, setErrorMessage, successMessage, setSuccessMessage] = usePostJob();\r\n\r\n    let categories = Array.from(new Set(jobs.map(job => job.category)));\r\n    let levels = Array.from(new Set(jobs.map(job => job.seniority)));\r\n\r\n    const generateId = () => {\r\n        return Math.max(0, ...jobs.map(job => job.id)) + 1;\r\n    };\r\n\r\n    const getDate = () => {\r\n        const date = new Date();\r\n        const day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);\r\n        const month = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(date);\r\n        const year = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\r\n        return `${day}.${month}.${year}.`\r\n    }\r\n\r\n    const isValid = () => {\r\n        if (jobTitle.trim() === '' || jobLocation.trim() === '' || seniority === '' || jobCategory === '' || jobSnippet.trim() === '' || jobDescription.trim() === '' || companyName.trim() === '' || companyInfo.trim() === '' || location.trim() === '' || employeesNumber.trim() === '' || phone.trim() === '' || email.trim() === '' || url.trim() === '') {\r\n            setErrorMessage(<p className=\"error-msg\">All fields must be filled!</p>);\r\n            setTimeout(() => {\r\n                setErrorMessage('');\r\n            }, 2000);\r\n            return false;\r\n        } else {\r\n            setSuccessMessage(<p className=\"success-msg\">Successfully saved!</p>);\r\n            setTimeout(() => {\r\n                setSuccessMessage('');\r\n            }, 5000);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return user ? (\r\n        <StyledCreateJob>\r\n            <StyledForm onSubmit={(e) => {\r\n                e.preventDefault(e);\r\n\r\n                if (isValid()) {\r\n                    let newJob = {\r\n                        id: generateId(),\r\n                        title: jobTitle,\r\n                        location: jobLocation,\r\n                        seniority: seniority,\r\n                        category: jobCategory,\r\n                        createdAt: getDate(),\r\n                        snippet: jobSnippet,\r\n                        job_description: jobDescription,\r\n                        company_info: {\r\n                            name: companyName,\r\n                            general_info: companyInfo,\r\n                            location: location,\r\n                            number_of_employees: employeesNumber,\r\n                            contact: [\r\n                                phone, email\r\n                            ],\r\n                            link: url\r\n                        }\r\n                    };\r\n\r\n                    postJob(newJob).then(res => {\r\n                        setJobs(prev => [...prev, res.data]);                       \r\n                    });\r\n                }\r\n            }}>\r\n\r\n                <StyledJobInfo>\r\n                    <h3><span>Job Info</span></h3>\r\n                    <ul>\r\n                        <li>\r\n                            <label htmlFor=\"title\">Job Title</label>\r\n                            <input type=\"text\" name=\"title\" className=\"form-control\" placeholder=\"Job Title...\" onChange={(e) => setJobTitle(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <label>Location</label>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Location...\" onChange={(e) => setJobLocation(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <p>Seniority</p>\r\n                            {levels.map(level => <div className=\"seniority\" key={level}>\r\n                                <input type=\"radio\" name=\"seniority\" id={level} value={level} onChange={(e) => setSeniority(e.target.value)} />\r\n                                <label className=\"seniority-label\" htmlFor={level}>{level}</label>\r\n                            </div>\r\n                            )}\r\n                        </li>\r\n                        <li>\r\n                            <label>Category</label>\r\n                            <select defaultValue={'default'} onChange={(e) => setJobCategory(e.target.value)}>\r\n                                <option value=\"default\" disabled hidden>Choose category</option>\r\n                                {categories.map(category => <option key={category} value={category}>{category}</option>)}\r\n                                <option value=\"other\">Other</option>\r\n                            </select>\r\n                        </li>\r\n                        <li>\r\n                            <label>Short Description</label>\r\n                            <textarea cols=\"40\" rows=\"5\" placeholder=\"Enter Job Snippet...\" onChange={(e) => setJobSnippet(e.target.value)}></textarea>\r\n                        </li>\r\n                        <li>\r\n                            <label>Job Description</label>\r\n                            <textarea cols=\"50\" rows=\"10\" placeholder=\"Enter Job Description...\" onChange={(e) => setJobDescription(e.target.value)}></textarea>\r\n                        </li>\r\n                    </ul>\r\n                </StyledJobInfo>\r\n                <StyledCompanyInfo>\r\n                    <h3><span>Company Info</span></h3>\r\n                    <ul>\r\n                        <li>\r\n                            <label>Company Name</label>\r\n                            <input type=\"text\" placeholder=\"Company Name...\" onChange={(e) => setCompanyName(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <label>About Company</label>\r\n                            <textarea cols=\"50\" rows=\"10\" placeholder=\"Enter Company Info...\" onChange={(e) => setCompanyInfo(e.target.value)}></textarea>\r\n                        </li>\r\n                        <li>\r\n                            <label>Location</label>\r\n                            <input type=\"text\" placeholder=\"Location...\" onChange={(e) => setLocation(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <label>Number of employees</label>\r\n                            <input type=\"number\" placeholder=\"Number of employees...\" onChange={(e) => setEmployeesNumber(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <label>Phone Number</label>\r\n                            <input type=\"text\" placeholder=\"Phone Number...\" onChange={(e) => setPhone(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <label>Email Address</label>\r\n                            <input type=\"text\" placeholder=\"Email Address...\" onChange={(e) => setEmail(e.target.value)} />\r\n                        </li>\r\n                        <li>\r\n                            <label>Official Site</label>\r\n                            <input type=\"text\" placeholder=\"Official site...\" onChange={(e) => setUrl(e.target.value)} />\r\n                        </li>\r\n                    </ul>\r\n                </StyledCompanyInfo>\r\n                <StyledErrorMsg>\r\n                    {errorMessage}\r\n                </StyledErrorMsg>\r\n                <StyledSuccessMsg>\r\n                    {successMessage}\r\n                </StyledSuccessMsg>\r\n                <StyledButton>\r\n                    <input type=\"submit\" value=\"Save\" />\r\n                </StyledButton>\r\n            </StyledForm>\r\n        </StyledCreateJob>\r\n    )\r\n        :\r\n        <Redirect to='/login' />\r\n}\r\n\r\nexport default CreateJob\r\n","import { useState } from 'react';\r\n\r\nexport const usePostJob = () => {\r\n    const [jobTitle, setJobTitle] = useState('');\r\n    const [jobLocation, setJobLocation] = useState('');\r\n    const [seniority, setSeniority] = useState('');\r\n    const [jobCategory, setJobCategory] = useState('');\r\n    const [jobSnippet, setJobSnippet] = useState('');\r\n    const [jobDescription, setJobDescription] = useState('');\r\n    const [companyName, setCompanyName] = useState('');\r\n    const [companyInfo, setCompanyInfo] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [employeesNumber, setEmployeesNumber] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [url, setUrl] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    return [jobTitle, setJobTitle, jobLocation, setJobLocation, seniority, setSeniority, jobCategory, setJobCategory, jobSnippet, setJobSnippet, jobDescription, setJobDescription, companyName, setCompanyName, companyInfo, setCompanyInfo, location, setLocation, employeesNumber, setEmployeesNumber, phone, setPhone, email, setEmail, url, setUrl, errorMessage, setErrorMessage, successMessage, setSuccessMessage];\r\n}\r\n","import { Route } from 'react-router';\r\n\r\nconst PublicRoute = ({ path, exact, Component }) => {\r\n    return (\r\n        <Route exact={exact} path={path}>\r\n            <Component />\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default PublicRoute","import { Route } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ path, exact, Component, user }) => {\r\n    return user ? (\r\n        <Route exact={exact} path={path}>\r\n            <Component />\r\n        </Route>\r\n    ) :\r\n        <Redirect to='/login' />\r\n}\r\n\r\nexport default PrivateRoute\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledSavedJob = styled.div`\r\n    width: 100%;\r\n    min-height: 250px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 10px 20px;\r\n    margin-bottom: 40px;\r\n    background-color: #fff;\r\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\r\n    .v-line {\r\n        border-right: 0.5px solid #777777;\r\n        height: 150px;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding: 20px 0;\r\n        .v-line {\r\n            border: none;\r\n            height: 0;\r\n            border-bottom: 0.5px solid #777777;\r\n            width: 90%;\r\n            margin-top: 20px;\r\n        }\r\n    }\r\n`\r\n\r\nexport const StyledDate = styled.div`\r\n    width: 25%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 15px;\r\n    margin-right: 20px;\r\n    i {\r\n        font-size: 35px;\r\n    }\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        margin: 0;\r\n    }\r\n`\r\n\r\nexport const StyledContent = styled.div`\r\n    width: 75%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 20px;\r\n    a {\r\n        color: #4b4b4b;\r\n        text-decoration: none;\r\n        &:hover {\r\n            text-decoration: underline;\r\n        }\r\n        a:last-child {\r\n            font-size: 15px;\r\n        }\r\n    }\r\n    p {\r\n        font-size: 14px;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        text-align: center;\r\n    }\r\n`","import { Link } from 'react-router-dom';\r\nimport { StyledSavedJob, StyledDate, StyledContent } from \"./StyledSavedJob\"\r\n\r\nconst SavedJob = ({ job }) => {\r\n    return (\r\n        <StyledSavedJob>\r\n            <StyledDate>\r\n                <span><i className=\"far fa-calendar-alt\"></i></span>\r\n                <p>Application deadline: </p>\r\n                <div>{job.createdAt}</div>\r\n            </StyledDate>\r\n            <div className=\"v-line\"></div>\r\n            <StyledContent>\r\n                <Link to={`/jobs/${job._id}`}><h2>{job.title}</h2></Link>\r\n                <Link to={`/jobs/${job._id}/${job.company_info.name}`}><h5>{job.company_info.name}</h5></Link>\r\n                <p>{job.snippet}</p>\r\n            </StyledContent>\r\n        </StyledSavedJob>\r\n    )\r\n}\r\n\r\nexport default SavedJob\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledSavedJobs = styled.div`\r\n    width: 70%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    \r\n    margin: 100px auto;\r\n    .main-header {\r\n        margin-bottom: 50px;\r\n        p:first-child {\r\n            font-size: 25px;\r\n            text-transform: uppercase;\r\n        }\r\n    }\r\n    \r\n\r\n    .saved-empty-msg {\r\n        width: 50%;\r\n        margin: 0 auto;\r\n        text-align: center;\r\n        padding: 5px 5px;\r\n        border-radius: 5px;\r\n        background-color: rgba(75, 75, 75, 0.4);\r\n        p, a {\r\n            color: #fafafa;\r\n            font-size: 18px;\r\n            text-decoration: none;\r\n        }\r\n        a {\r\n            text-transform: uppercase;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        .saved-empty-msg {\r\n            width: 60%;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n        .saved-empty-msg {\r\n            width: 80%;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        .saved-empty-msg {\r\n            width: 100%;\r\n            p, a {\r\n            font-size: 15px;\r\n            }\r\n        }   \r\n    }\r\n`","import { Link } from 'react-router-dom';\r\nimport SavedJob from \"./SavedJob\"\r\nimport { StyledSavedJobs } from \"./StyledSavedJobs\"\r\n\r\nconst SavedJobs = ({ savedJobs }) => {\r\n    return (\r\n        <StyledSavedJobs>\r\n            <div className=\"main-header\">\r\n                <p>Saved Jobs</p>\r\n                <p>See all the ads you've saved in one place.</p>\r\n            </div>\r\n            {savedJobs.length !== 0 ? savedJobs.map(job => <SavedJob key={job._id} job={job} />) : <div className=\"saved-empty-msg\">\r\n                <p>There's no saved jobs on your profile!</p>\r\n                <Link to=\"/jobs\"><p>See job list</p></Link>\r\n            </div>}\r\n        </StyledSavedJobs>\r\n    )\r\n}\r\n\r\nexport default SavedJobs\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledUser = styled.div`\r\n    width: 100%;\r\n    min-height: 85vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    color: #4b4b4b;\r\n`\r\n\r\nexport const StyledUserInfo = styled.div`\r\n    width: 70%;\r\n    height: 150px;\r\n    background-color: #fff;\r\n    margin: 120px auto 0 auto;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(255, 250, 101, 0.5);\r\n    img {\r\n        border-radius: 50%;\r\n        border: 8px solid #fafafa;\r\n        width: 150px;\r\n        margin-top: -50px;\r\n    }\r\n\r\n    p {\r\n        font-size: 30px;\r\n        letter-spacing: 1px;\r\n    }\r\n`","import { useState, useEffect } from 'react';\r\nimport { getJobById } from \"../../service\"\r\nimport SavedJobs from './SavedJobs';\r\nimport { StyledUser, StyledUserInfo } from \"./StyledUser\"\r\n\r\nconst User = ({ user }) => {\r\n    const [saved, setSaved] = useState([]);\r\n\r\n    useEffect(() => {\r\n        user.savedJobs.map(job => getJobById(job)\r\n            .then(res => setSaved(prev => [...prev, res.data])))\r\n    }, [])\r\n    return (\r\n        <StyledUser>\r\n            <StyledUserInfo>\r\n                <img src='/job-finder-react/profile.png' alt=\"Profile\" width=\"250px\" />\r\n                <p>{user.firstName} {user.lastName}</p>\r\n            </StyledUserInfo>\r\n            <SavedJobs savedJobs={saved}/>\r\n        </StyledUser>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledPagination = styled.div`\r\n    width: 100%;\r\n    height: 20vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 10px auto;\r\n    button {\r\n        cursor: pointer;\r\n        padding: 8px 15px;\r\n        font-size: 15px;\r\n        background-color: rgba(75, 75, 75, 0.8);\r\n        border: 1px solid #fafafa;\r\n        outline: none;\r\n        border-radius: 4px;\r\n        color: #fafafa;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        button {\r\n            padding: 7px 15px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n        margin: 20px auto;\r\n        .button {\r\n            padding: 3px 8px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        margin: 30px auto;\r\n        \r\n    }\r\n`\r\n\r\nexport const StyledButtons = styled.div`\r\n    width: 600px;\r\n    text-align: center;\r\n\r\n    @media (max-width: 600px) {\r\n        width: 500px;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n        width: 300px;\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        width: 200px;\r\n    }\r\n`","import { StyledPagination, StyledButtons } from \"./StyledPagination\";\r\n\r\nconst Pagination = ({ current, jobsPerPage, totalJobs, paginate, showPreviousPage, showNextPage }) => {\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalJobs / jobsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <StyledPagination>\r\n            <StyledButtons>\r\n                {current !== pageNumbers[0] ? <button onClick={() => {\r\n                    showPreviousPage()\r\n                }}>Prev</button> : ''}\r\n                {pageNumbers.map(number => <button onClick={() => {\r\n                    paginate(number)\r\n                }}\r\n                    key={number}>{number}</button>)}\r\n                {current !== pageNumbers[pageNumbers.length - 1] ? <button onClick={() => {\r\n                    showNextPage()\r\n                }}>Next</button> : ''}\r\n            </StyledButtons>\r\n        </StyledPagination>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { getJobs } from './service';\nimport Navbar from './components/navbar/Navbar';\nimport JobList from './components/jobList/JobList';\nimport JobInfo from './components/jobInfo/JobInfo';\nimport Home from './components/home/Home';\nimport Login from './components/login/Login';\nimport Register from './components/registration/register/Register';\nimport Footer from './components/Footer/Footer';\nimport CompanyInfo from './components/companyInfo/CompanyInfo';\nimport GlobalStyle from './components/GlobalStyle';\nimport CreateJob from './components/createJob/CreateJob';\nimport PublicRoute from './components/Route/PublicRoute';\nimport PrivateRoute from './components/Route/PrivateRoute';\nimport User from './components/User/User';\nimport Pagination from './components/Pagination/Pagination';\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n  const [jobs, setJobs] = useState([]);\n  const [savedJobs, setSavedJobs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [jobsPerPage] = useState(5);\n\n  useEffect(() => {\n    let mounted = true;\n    getJobs().then(res => {\n      if (mounted) {\n        setJobs(res.data);\n      }\n    })\n    return () => mounted = false\n  }, []);\n\n  // Get current posts\n  const indexOfLastJob = currentPage * jobsPerPage;\n  const indexOfFirstJob = indexOfLastJob - jobsPerPage;\n  const currentJobs = jobs.slice(indexOfFirstJob, indexOfLastJob);\n\n  // Change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n  const showPreviousPage = () => setCurrentPage(currentPage - 1);\n  const showNextPage = () => setCurrentPage(currentPage + 1);\n\n  return (\n    <Router>\n      <GlobalStyle />\n      <Navbar user={user} setUser={setUser} />\n      <Switch>\n        <PublicRoute exact path='/login' Component={() => <Login setUser={setUser} />} />\n        <PublicRoute exacte path='/register' Component={Register} />\n        <PrivateRoute exact path='/jobs/:id/:details' user={user} Component={() => <CompanyInfo user={user} />} />\n        <PrivateRoute exact path='/jobs/:id' user={user} Component={() => <JobInfo user={user} />} />\n        <PrivateRoute exact path='/jobs' user={user} Component={() => <JobList allJobs={jobs} jobs={currentJobs} user={user} setJobs={setJobs} savedJobs={savedJobs} setSavedJobs={setSavedJobs} jobsPerPage={jobsPerPage} pagination={<Pagination current={currentPage} jobsPerPage={jobsPerPage} totalJobs={jobs.length} paginate={paginate} showPreviousPage={showPreviousPage} showNextPage={showNextPage} />} />} />\n        <PrivateRoute exact path='/createjob' user={user} Component={() => <CreateJob user={user} jobs={jobs} setJobs={setJobs} />} />\n        <PrivateRoute exact path='/user/:id' user={user} Component={() => <User user={user} />} />\n        <PublicRoute exact path='/' Component={() => <Home jobs={jobs} user={user} />} />\n      </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}